"use strict";
cc._RF.push(module, 'a7899+L/2JFU7gsIC4xMMHs', 'ResurgenceCtrl');
// Script/resurgence/ResurgenceCtrl.ts

Object.defineProperty(exports, "__esModule", { value: true });
var StateManage_1 = require("../StateManage/StateManage");
var WXCore_1 = require("../gamecore/wechat/WXCore");
var GameManager_1 = require("../gamecore/managers/GameManager");
var GameEventNames_1 = require("../GameEventNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ResurgenceCtrl = /** @class */ (function (_super) {
    __extends(ResurgenceCtrl, _super);
    function ResurgenceCtrl() {
        var _this = _super.call(this) || this;
        _this._resurgenceCardNum = 0;
        _this.initData();
        return _this;
    }
    ResurgenceCtrl_1 = ResurgenceCtrl;
    Object.defineProperty(ResurgenceCtrl, "instance", {
        get: function () {
            if (!this._instance)
                this._instance = new ResurgenceCtrl_1();
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResurgenceCtrl.prototype, "resurgenceCardNum", {
        get: function () {
            return this._resurgenceCardNum;
        },
        set: function (v) {
            if (this._resurgenceCardNum != v) {
                this._resurgenceCardNum = v;
                this.dispatchEvent(new cc.Event("esurgenceCard", false));
            }
        },
        enumerable: true,
        configurable: true
    });
    ResurgenceCtrl.prototype.initData = function () {
        this.resurgenceCardNum = StateManage_1.default.instance.getData(StateManage_1.default.KEY_RESURGENCECARDNUM);
    };
    // 获得复活卡 +1
    ResurgenceCtrl.prototype.addResurgenceCard = function () {
        this.resurgenceCardNum = this.resurgenceCardNum + 1;
        StateManage_1.default.instance.setData(StateManage_1.default.KEY_RESURGENCECARDNUM, this.resurgenceCardNum);
    };
    // 使用复活卡 -1
    ResurgenceCtrl.prototype.minusResurgenceCard = function () {
        var temp = this.resurgenceCardNum - 1;
        console.log("temp", temp);
        if (temp < 0) {
            GameManager_1.default.eventManager.dispatchEventWith(GameEventNames_1.default.SHOW_ALERT, ["复活卡不足，是否马上向好友求助？", function (res) {
                    if (res == "ok") {
                        // WXCore.setOnShareAppMessage();
                        WXCore_1.default.showToast("分享朋友获得复活卡");
                    }
                }]);
            return false;
        }
        this.resurgenceCardNum = temp;
        StateManage_1.default.instance.setData(StateManage_1.default.KEY_RESURGENCECARDNUM, this.resurgenceCardNum);
        //使用次数 +1
        var resurgenceCar = StateManage_1.default.instance.getData(StateManage_1.default.KEY_RESURGENCECAR) + 1;
        StateManage_1.default.instance.setData(StateManage_1.default.KEY_RESURGENCECAR, resurgenceCar);
        WXCore_1.default.showToast("使用成功!");
    };
    // 获取当前复活卡数量
    ResurgenceCtrl.prototype.getResurgenceCardNum = function () {
        return this.resurgenceCardNum;
    };
    ResurgenceCtrl._instance = null;
    ResurgenceCtrl = ResurgenceCtrl_1 = __decorate([
        ccclass
    ], ResurgenceCtrl);
    return ResurgenceCtrl;
    var ResurgenceCtrl_1;
}(cc.Node));
exports.default = ResurgenceCtrl;

cc._RF.pop();