{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Game/assets\\Script\\Game\\Game.ts"],"names":[],"mappings":";;;;;AAKA,0DAAqD;AAE/C,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAAkC,wBAAY;IAD9C;QAAA,qEA6DC;QA1DG,aAAO,GAAW,IAAI,CAAC;QAMf,iBAAW,GAAW,KAAK,CAAC;;IAoDxC,CAAC;aA5DoB,IAAI;IAarB,qBAAM,GAAN;QACI,EAAE,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/C,EAAE,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,cAAc,GAAG,CAAC,CAAC;QACnD,IAAI,MAAM,GAAQ,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;QAC7B,IAAG,CAAC,MAAI,CAAC,YAAY,EAAC;YAClB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAS,GAAG,EAAE,MAAM;gBAC5C,MAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC3B,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC5C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;YACH;;;;;kBAKM;SACT;IACL,CAAC;IAED,MAAM;IACE,sBAAO,GAAf;QACI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IACD,OAAO;IACC,uBAAQ,GAAhB;QACI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;IACjC,CAAC;IACD,OAAO;IACC,uBAAQ,GAAhB,UAAiB,CAAU;QACvB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC;IACD,oBAAK,GAAL;QACI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC7C,6DAA6D;IACjE,CAAC;IACD,gBAAgB;IAChB,IAAI;IACI,iCAAkB,GAA1B,UAA2B,CAAU;QACjC,IAAI,GAAG,GAAU,qBAAW,CAAC,QAAQ,CAAC,cAAc,CAAC;IAEzD,CAAC;IACD,wBAAS,GAAT;QACI,qBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAChE,CAAC;IAlDa,iBAAY,GAAW,KAAK,CAAC;IAP3C;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;yCACK;IAEvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACF;IAEhB;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;sCACL;IAND,IAAI;QADxB,OAAO;OACa,IAAI,CA4DxB;IAAD,WAAC;;CA5DD,AA4DC,CA5DiC,EAAE,CAAC,SAAS,GA4D7C;kBA5DoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Game","sourcesContent":["\r\nimport Config from \"../StateManage/StateManage\";\r\nimport GameManager from \"../gamecore/managers/GameManager\";\r\nimport GameOverCommand from \"../commands/GameOverCommand\";\r\nimport Action from \"../commands/Action\";\r\nimport StateManage from \"../StateManage/StateManage\";\r\nimport Over from \"../commands/Over\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Game extends cc.Component {\r\n    @property(cc.Node)\r\n    homeBar:cc.Node = null;\r\n    @property(cc.Node)\r\n    animNode:cc.Node\r\n    @property(cc.Animation)\r\n    anim:cc.Animation;\r\n\r\n    private _isTouching:boolean = false;\r\n    public static actionPrefab:Boolean = false;\r\n\r\n    private _actionNode:cc.Node;\r\n\r\n    onLoad () {\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        cc.director.getPhysicsManager().debugDrawFlags = 0;\r\n        let script:Game = this;\r\n        this.animNode.active = false;\r\n        if(!Game.actionPrefab){\r\n            cc.loader.loadRes(\"action\", function(err, prefab){\r\n                Game.actionPrefab = prefab;\r\n                script._actionNode = cc.instantiate(prefab);\r\n                script.node.addChild(script._actionNode);\r\n            });\r\n            /* cc.loader.loadRes(\"over\", function(err, prefab){\r\n                let newNode:cc.Node = cc.instantiate(prefab);\r\n                script.node.addChild(newNode);\r\n                newNode.active = false;\r\n                Over.instance.initialize(newNode);\r\n            }); */\r\n        }\r\n    }\r\n\r\n    // 打鸡蛋\r\n    private playEgg(){\r\n        this.animNode.active = true;\r\n        this.anim.play(\"animotion\");\r\n    }\r\n    // 移除动画\r\n    private Finished(){\r\n        this.animNode.active = false;\r\n    }\r\n    // 返回首页\r\n    private homePage(e:cc.Event):void {\r\n        cc.director.loadScene(\"indexSence\");\r\n    }\r\n    start () {\r\n        this.homeBar.on(cc.Node.EventType.TOUCH_END, this.homePage, this);\r\n        this.anim.on(\"finished\",this.Finished, this);\r\n        // GameManager.context.mapEvent(\"gameover\", GameOverCommand);\r\n    }\r\n    // update (dt) {\r\n    // }\r\n    private stateChangeHandler(e:cc.Event):void {\r\n        let key:string = StateManage.instance.lastChangedKey;\r\n        \r\n    }\r\n    onDestroy() {\r\n        StateManage.instance.off(\"change\", this.stateChangeHandler);\r\n    }\r\n}\r\n"]}