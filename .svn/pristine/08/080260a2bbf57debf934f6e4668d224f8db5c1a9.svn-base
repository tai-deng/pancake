"use strict";
cc._RF.push(module, '6c0d5amoh9GAJ4/4ntC9utK', 'Shopping');
// Script/shopping/Shopping.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ShopMod_1 = require("./ShopMod");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Shopping = /** @class */ (function (_super) {
    __extends(Shopping, _super);
    function Shopping() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.potBtn = null;
        _this.cakeBtn = null;
        _this.btnImg = [];
        _this.itemHeight = 176;
        _this._itemData = [];
        return _this;
    }
    // onLoad () {}
    Shopping.prototype.getPotData = function () {
        var potData = ShopMod_1.default.instance.getPotList();
        this.ambry = potData;
    };
    Shopping.prototype.getCakeData = function () {
        var cakeData = ShopMod_1.default.instance.getCakeList();
        this.ambry = cakeData;
    };
    Object.defineProperty(Shopping.prototype, "ambry", {
        get: function () {
            return this._itemData;
        },
        set: function (v) {
            if (this._itemData != v) {
                this._itemData = v;
                this.getData(this.ambry);
            }
        },
        enumerable: true,
        configurable: true
    });
    Shopping.prototype.dataChanged = function (ev) {
        if (ev.type == "potDataChanged") {
            this.getPotData();
        }
        if (ev.type == "cakeDataChanged") {
            this.getCakeData();
        }
    };
    // 锅皮肤按钮
    Shopping.prototype.potButton = function () {
        cc.log("锅皮肤");
        ShopMod_1.default.instance.isTab = true;
        this.potBtn.getComponent(cc.Sprite).spriteFrame = this.btnImg[1]; //  使用中
        this.cakeBtn.getComponent(cc.Sprite).spriteFrame = this.btnImg[0]; //  未使用
        this.getPotData();
    };
    // 饼皮肤按钮
    Shopping.prototype.cakeButton = function () {
        cc.log("饼皮肤");
        ShopMod_1.default.instance.isTab = false;
        this.potBtn.getComponent(cc.Sprite).spriteFrame = this.btnImg[0]; //  使用中
        this.cakeBtn.getComponent(cc.Sprite).spriteFrame = this.btnImg[1]; //  未使用
        var cakeData = ShopMod_1.default.instance.getCakeList();
        this.ambry = cakeData;
    };
    Shopping.prototype.start = function () {
        // 注册数据改变事件
        ShopMod_1.default.instance.on("potDataChanged", this.dataChanged, this);
        ShopMod_1.default.instance.on("cakeDataChanged", this.dataChanged, this);
        this.getPotData();
        // StateManage.instance.on("change",this.stateChangeHandler,this);
    };
    // 渲染商品
    Shopping.prototype.getData = function (goods) {
        this.container.removeAllChildren();
        var goodNumber = goods.length;
        var row = Math.floor(goodNumber / 3) + (goodNumber % 3 == 0 ? 0 : 1);
        this.container.height = (this.itemHeight + 14) * row + 14;
        cc.loader.loadRes("shopping/item", function (err, prefab) {
            for (var i = 0; i < goods.length; ++i) {
                var item = cc.instantiate(prefab);
                item.getComponent("Goods").deploy = goods[i];
                this.container.addChild(item);
            }
        }.bind(this));
        cc.find("Canvas/shopping/scroll").getComponent(cc.ScrollView).scrollToTop(0.1);
    };
    // 购买新皮肤
    Shopping.prototype.shopping = function (event, customEventData) {
        cc.log("购买", event.target.parent);
    };
    // update (dt) {}
    Shopping.prototype.onDestroy = function () {
        // 页面退出时保持用户使用信息
        ShopMod_1.default.instance.updateData();
        // StateManage.instance.off("change", this.stateChangeHandler);
    };
    __decorate([
        property(cc.Node)
    ], Shopping.prototype, "potBtn", void 0);
    __decorate([
        property(cc.Node)
    ], Shopping.prototype, "cakeBtn", void 0);
    __decorate([
        property([cc.SpriteFrame])
    ], Shopping.prototype, "btnImg", void 0);
    __decorate([
        property(cc.Node)
    ], Shopping.prototype, "container", void 0);
    Shopping = __decorate([
        ccclass
    ], Shopping);
    return Shopping;
}(cc.Component));
exports.default = Shopping;

cc._RF.pop();