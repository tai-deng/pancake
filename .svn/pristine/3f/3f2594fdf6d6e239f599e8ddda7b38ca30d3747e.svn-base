"use strict";
cc._RF.push(module, 'bc276zJpS5B6q/rnLx+2IRM', 'LevelDetailPanelMain');
// Script/gameScene/LevelDetailPanelMain.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../GameConfig");
var LevelDetailItemMain_1 = require("./LevelDetailItemMain");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * 等级详细信息面板
 *
 */
var LevelDetailPanelMain = /** @class */ (function (_super) {
    __extends(LevelDetailPanelMain, _super);
    function LevelDetailPanelMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //背景
        _this.bg = null;
        _this.currentLevelLabel = null;
        _this.nextLevelLabel = null;
        return _this;
    }
    LevelDetailPanelMain.prototype.start = function () {
        this.refreshUI();
    };
    // update (dt) {}
    LevelDetailPanelMain.prototype.refreshUI = function () {
        this.currentLevelNode.getComponent(LevelDetailItemMain_1.default).levelData = this.currentLevelData;
        this.currentLevelLabel.string = "等级" + this.currentLevelData["level"];
        var index = GameConfig_1.default.LEVELS.indexOf(this.currentLevelData);
        if (index == GameConfig_1.default.LEVELS.length - 1) {
            //最后一个等级
            this.bg.height = this.node.height / 2 - (this.currentLevelNode.y - this.currentLevelNode.height - 20);
        }
        else {
            var nextLevelData = GameConfig_1.default.LEVELS[index + 1];
            this.nextLevelNode.getComponent(LevelDetailItemMain_1.default).levelData = nextLevelData;
        }
    };
    __decorate([
        property(cc.Node)
    ], LevelDetailPanelMain.prototype, "bg", void 0);
    __decorate([
        property(cc.Node)
    ], LevelDetailPanelMain.prototype, "currentLevelNode", void 0);
    __decorate([
        property({
            type: cc.Label,
            displayName: "当前等级文本"
        })
    ], LevelDetailPanelMain.prototype, "currentLevelLabel", void 0);
    __decorate([
        property(cc.Node)
    ], LevelDetailPanelMain.prototype, "nextLevelNode", void 0);
    __decorate([
        property({
            type: cc.Label,
            displayName: "下级等级文本"
        })
    ], LevelDetailPanelMain.prototype, "nextLevelLabel", void 0);
    LevelDetailPanelMain = __decorate([
        ccclass
    ], LevelDetailPanelMain);
    return LevelDetailPanelMain;
}(cc.Component));
exports.default = LevelDetailPanelMain;

cc._RF.pop();