"use strict";
cc._RF.push(module, '41938g74ERJOYQahWMDj7Bm', 'Self');
// Script/Self.ts

Object.defineProperty(exports, "__esModule", { value: true });
var RankCtrl_1 = require("./RankCtrl");
var WXCore_1 = require("./WXCore");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Self = /** @class */ (function (_super) {
    __extends(Self, _super);
    function Self() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.integral = null;
        _this.userPic = null;
        _this.userName = null;
        _this.medalNode = null;
        _this.medalOne = null;
        _this.medalTwo = null;
        _this.medalThree = null;
        _this.medalFour = null;
        _this.place = null;
        return _this;
        // update (dt) {}
    }
    Object.defineProperty(Self.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (v) {
            if (this._data != v) {
                this._data = v;
                this.refreshUI();
            }
        },
        enumerable: true,
        configurable: true
    });
    // onLoad () {}
    Self.prototype.start = function () {
        if (!this._isOnLoadCalled)
            return;
        console.log("自己的排行", this.data);
        RankCtrl_1.default.instance.on("getselfRankEvent", this.getselfRank, this);
        this.getselfRank();
    };
    Self.prototype.getselfRank = function () {
        this.data = RankCtrl_1.default.instance.getSelfRank();
        console.log("self", this.data);
    };
    Self.prototype.refreshUI = function () {
        this.integral.string = this.data["maxScore"] ? this.data["maxScore"] : 0;
        if (this.data["avatarUrl"]) {
            this.userPic.spriteFrame = WXCore_1.default.createImage(this.data["avatarUrl"]);
        }
        this.userName.string = this.data["nickname"] ? this.data["nickname"] : "";
        this.place.string = this.data["rank"] ? this.data["rank"] : 0;
        if (this.data["rank"] == 1) {
            this.medalNode.spriteFrame = this.medalOne;
            this.place.node.color = new cc.Color(255, 0, 0);
        }
        if (this.data["rank"] == 2) {
            this.medalNode.spriteFrame = this.medalTwo;
            this.place.node.color = new cc.Color(255, 255, 255);
        }
        if (this.data["rank"] == 3) {
            this.medalNode.spriteFrame = this.medalThree;
            this.place.node.color = new cc.Color(255, 255, 255);
        }
        if (this.data["rank"] > 3) {
            this.medalNode.spriteFrame = this.medalFour;
            this.place.node.color = new cc.Color(255, 255, 255);
            this.place.node.y = 0;
        }
    };
    __decorate([
        property(cc.Label) // 积分
    ], Self.prototype, "integral", void 0);
    __decorate([
        property(cc.Sprite) // 用户头像
    ], Self.prototype, "userPic", void 0);
    __decorate([
        property(cc.Label) // 用户昵称
    ], Self.prototype, "userName", void 0);
    __decorate([
        property(cc.Sprite) // 奖牌节点
    ], Self.prototype, "medalNode", void 0);
    __decorate([
        property(cc.SpriteFrame) // 第一名
    ], Self.prototype, "medalOne", void 0);
    __decorate([
        property(cc.SpriteFrame) // 第二名
    ], Self.prototype, "medalTwo", void 0);
    __decorate([
        property(cc.SpriteFrame) // 第三名
    ], Self.prototype, "medalThree", void 0);
    __decorate([
        property(cc.SpriteFrame) // 其他名次奖牌
    ], Self.prototype, "medalFour", void 0);
    __decorate([
        property(cc.Label) // 其他名次
    ], Self.prototype, "place", void 0);
    Self = __decorate([
        ccclass
    ], Self);
    return Self;
}(cc.Component));
exports.default = Self;

cc._RF.pop();