{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\gameScene/assets\\Script\\gameScene\\PancakeMain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\gameScene","sourcesContent":["import GameConfig from \"../GameConfig\";\r\nimport PancakeStates from \"./PancakeStates\";\r\nimport LevelData from \"./LevelData\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * 煎饼\r\n */\r\n@ccclass\r\nexport default class PancakeMain extends cc.Component {\r\n\r\n    //获取到宝石\r\n    public static EVENT_GET_DIAMOND:string = \"getDiamond\"\r\n\r\n    //落在了铁盘上\r\n    public static EVENT_ON_PAN:string = \"onPan\";\r\n\r\n    //离开铁盘\r\n    public static EVENT_LEAVE_PAN:string = \"leavePan\";\r\n\r\n    //接触铁盘\r\n    public static EVENT_TOUCH_PAN:string = \"touchPan\";\r\n\r\n    //死亡\r\n    public static EVENT_DIE:string = \"die\";\r\n\r\n    //获得分数\r\n    public static EVENT_GET_SCORE:string = \"getScore\";\r\n\r\n\r\n    //煎饼贴图\r\n    public pancakeTexture:cc.Texture2D;\r\n\r\n\r\n    //中间节点\r\n    private _centerNode:cc.Node;\r\n\r\n\r\n    //片段节点\r\n    private _slices:Array<cc.Node> = []\r\n\r\n\r\n    //当前分数\r\n    private _score:number = 0;\r\n\r\n    start () {\r\n        this.createRigidBodies();\r\n        this.applyLevelData();\r\n\r\n        //中间节点\r\n        this._centerNode = this._slices[Math.floor(this._slices.length / 2)];\r\n        \r\n        //落在锅底上时，结算分数\r\n        this.node.on(PancakeMain.EVENT_ON_PAN, this.onPanHandler, this);\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建结构\r\n     * \r\n     */\r\n    private createRigidBodies():void {\r\n        //煎饼宽\r\n        let pancakeW:number = 168;\r\n        //煎饼高\r\n        let pancakeH:number = 28;\r\n        //煎饼分块数量\r\n        let sliceCount:number = GameConfig.PANCAKE_SLICE_COUNT;\r\n\r\n        let sliceW:number = pancakeW/sliceCount;\r\n        let lastSliceBody:cc.RigidBody;\r\n\r\n        let script:PancakeMain = this;\r\n\r\n        for (let i:number = 0; i < sliceCount; i++) {\r\n            let sliceNode:cc.Node = new cc.Node();\r\n            sliceNode.width = sliceW + 4;\r\n            sliceNode.height = pancakeH;\r\n            sliceNode.x = i * sliceW - pancakeW / 2;\r\n\r\n            //贴图\r\n            if (this.pancakeTexture) {\r\n                let child:cc.Node = new cc.Node();\r\n                child.x = -sliceNode.x - sliceW/2;\r\n                sliceNode.addChild(child);\r\n\r\n                let sprite:cc.Sprite = child.addComponent(cc.Sprite);\r\n                sprite.spriteFrame = new cc.SpriteFrame(this.pancakeTexture);\r\n\r\n                let mask:cc.Mask = sliceNode.addComponent(cc.Mask);\r\n                mask.type = cc.Mask.Type.RECT;\r\n            }\r\n\r\n\r\n            cc.info(\"====  createRigidBodies  ====\");\r\n            // let rigidBody:cc.RigidBody = sliceNode.addComponent(cc.RigidBody);\r\n            let collider:cc.PhysicsBoxCollider = sliceNode.addComponent(cc.PhysicsBoxCollider);\r\n            let rigidBody:cc.RigidBody = sliceNode.getComponent(cc.RigidBody);\r\n            //类型\r\n            // rigidBody.type = cc.RigidBodyType.Dynamic;\r\n            rigidBody.type = cc.RigidBodyType.Static;\r\n            //角速度衰减\r\n            rigidBody.angularDamping = GameConfig.PANCAKE_ANGULAR_DAMPING;\r\n            rigidBody.gravityScale = GameConfig.PANCAKE_GRAVITY_SCALE;//重力系数\r\n            //不旋转\r\n            // rigidBody.fixedRotation = true;\r\n            collider.size = new cc.Size(sliceW, pancakeH);\r\n            collider.friction = GameConfig.PANCAKE_FRICTION;//摩擦系数\r\n            collider.restitution = GameConfig.PANCAKE_RESTITUTION;//弹性系数\r\n            collider.apply();\r\n\r\n\r\n            if (!lastSliceBody) {\r\n                lastSliceBody = rigidBody;\r\n            } else {\r\n                //创建连接点\r\n                let revoluteJoint:cc.RevoluteJoint = sliceNode.addComponent(cc.RevoluteJoint);\r\n                revoluteJoint.anchor = new cc.Vec2(-sliceW/2, 0);\r\n                revoluteJoint.connectedAnchor = new cc.Vec2(sliceW/2, 0);\r\n                revoluteJoint.connectedBody = lastSliceBody;\r\n                revoluteJoint.collideConnected = false;//连接的两个钢体不碰撞\r\n                revoluteJoint.apply();\r\n                \r\n                //上头绳索\r\n                let ropeJoint:cc.RopeJoint = sliceNode.addComponent(cc.RopeJoint);\r\n                ropeJoint.anchor = new cc.Vec2(0, pancakeH / 2 - 2);\r\n                ropeJoint.connectedAnchor = new cc.Vec2(0, pancakeH / 2 - 2);\r\n                ropeJoint.connectedBody = lastSliceBody;\r\n                ropeJoint.maxLength = sliceW + GameConfig.PANCAKE_BEND;\r\n                ropeJoint.collideConnected = false;\r\n                ropeJoint.apply();\r\n                \r\n                //下头绳索\r\n                ropeJoint = sliceNode.addComponent(cc.RopeJoint);\r\n                ropeJoint.anchor = new cc.Vec2(0, -pancakeH / 2 + 2);\r\n                ropeJoint.connectedAnchor = new cc.Vec2(0, -pancakeH / 2 + 2);\r\n                ropeJoint.connectedBody = lastSliceBody;\r\n                ropeJoint.maxLength = sliceW + GameConfig.PANCAKE_BEND;\r\n                ropeJoint.collideConnected = false;\r\n                ropeJoint.apply();\r\n\r\n                lastSliceBody = rigidBody;\r\n            }\r\n\r\n\r\n\r\n\r\n            //======================================================\r\n            //监听事件\r\n            //======================================================\r\n            // body.fixedRotation = true;\r\n            rigidBody.enabledContactListener = true;\r\n            rigidBody.onBeginContact = function(contact:cc.PhysicsContact,selfCollider:cc.PhysicsCollider,otherCollider:cc.PhysicsCollider){\r\n                script.onBeginContact(contact, selfCollider, otherCollider);\r\n            }\r\n            // rigidBody.onEndContact = function(contact:cc.PhysicsContact,selfCollider:cc.PhysicsCollider,otherCollider:cc.PhysicsCollider){\r\n                //     script.onEndContact(contact, selfCollider, otherCollider);\r\n                // }\r\n            rigidBody.onPostSolve = function(contact:cc.PhysicsContact,selfCollider:cc.PhysicsCollider,otherCollider:cc.PhysicsCollider){\r\n                script.onPostSolve(contact, selfCollider, otherCollider);\r\n            }\r\n            //======================================================\r\n                    \r\n            this.node.addChild(sliceNode);\r\n            this._slices.push(sliceNode);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private _levelData:LevelData;\r\n    /**\r\n     * 设置当前等级数据\r\n     * \r\n     */\r\n    public set levelData(v:LevelData) {\r\n        if (!v) return;\r\n        if (this._levelData && this._levelData.level == v.level) return;\r\n\r\n        this._levelData = v;\r\n        this.applyLevelData();\r\n    }\r\n\r\n\r\n    /**\r\n     * 提交物理参数设定\r\n     * \r\n     */\r\n    private applyLevelData():void {\r\n        if (!this._isOnLoadCalled || !this._slices) return;\r\n        if (!this._levelData) return;\r\n\r\n        cc.info(\"【applyLevelData】\", JSON.stringify(this._levelData));\r\n\r\n        let levelData:LevelData = this._levelData;\r\n        this._slices.forEach(function(sliceNode:cc.Node):void {\r\n            // let rigidBody:cc.RigidBody = sliceNode.addComponent(cc.RigidBody);\r\n            let collider:cc.PhysicsBoxCollider = sliceNode.getComponent(cc.PhysicsBoxCollider);\r\n            let rigidBody:cc.RigidBody = sliceNode.getComponent(cc.RigidBody);\r\n            rigidBody.gravityScale = levelData.gravityScale;\r\n            collider.friction = levelData.friction;//摩擦系数\r\n            collider.restitution = levelData.restitution;//弹性系数\r\n            collider.apply();\r\n        });\r\n    }\r\n\r\n    public get centerNode():cc.Node {\r\n        return this._centerNode;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * //准备状态，用户激活后自动落下\r\n     * public static READY:number = 0;\r\n     * //下落中\r\n     * public static FALLING:number = 1;\r\n     * //在平底锅上安静躺着\r\n     * public static QUIET:number = 2;\r\n     * //上抛中\r\n     * public static RISING:number = 3;\r\n     */\r\n    private _state:number = 0;\r\n\r\n\r\n    /**\r\n     * 获取煎饼状态\r\n     * \r\n     * @see PancakeStates\r\n     */\r\n    public get state():number {\r\n        return this._state;\r\n    }\r\n\r\n\r\n    //上一次停止的时候的旋转度\r\n    private _lastRotation:number = 0;\r\n\r\n\r\n    update (dt) {\r\n        let frames:number = cc.director.getTotalFrames();\r\n\r\n        if (frames % 10 == 0) {\r\n            //检查煎饼的线性速度\r\n            let centerBody:cc.RigidBody = this._centerNode.getComponent(cc.RigidBody);\r\n            let velocity:cc.Vec2 = centerBody.getWorldPoint(new cc.Vec2(0, 0), null);\r\n            velocity = centerBody.getLinearVelocityFromWorldPoint(velocity, null);\r\n            if (velocity) {\r\n                // cc.info(this._state, velocity.x, velocity.y);\r\n                \r\n                //=====================================================\r\n                //计算获得分数\r\n                //=====================================================\r\n                let v:number = this.centerNode.rotation;\r\n                v = v - this._lastRotation;\r\n                v = Math.abs(Math.round(v/180));\r\n                if (v > 0) {\r\n                    //获得分数\r\n                    this._score++;\r\n                    \r\n                    this._lastRotation = this.centerNode.rotation;\r\n                }\r\n                //=====================================================\r\n                \r\n                let xv:number = Math.abs(velocity.x);\r\n                let yv:number = Math.abs(velocity.y);\r\n                if (this._state == PancakeStates.FALLING && xv < 2 && yv < 2) {\r\n                    if (this._state == PancakeStates.FALLING) {\r\n                        //落在铁盘上\r\n                        this.node.dispatchEvent(new cc.Event(PancakeMain.EVENT_ON_PAN, false));\r\n                    }\r\n                    this._state = PancakeStates.QUIET;//安静躺着\r\n                } else if (velocity.y > 5) {\r\n                    if (this._state == PancakeStates.FALLING) {\r\n                        //下落过程中\r\n                        this.node.dispatchEvent(new cc.Event(PancakeMain.EVENT_ON_PAN, false));\r\n                        this.node.dispatchEvent(new cc.Event(PancakeMain.EVENT_LEAVE_PAN, false));\r\n                    } else if (this._state == PancakeStates.QUIET) {\r\n                        this.node.dispatchEvent(new cc.Event(PancakeMain.EVENT_LEAVE_PAN, false));\r\n                    }\r\n                    \r\n                    this._state = PancakeStates.RISING;//上升\r\n                } else if (velocity.y < -5) {\r\n                    this._state = PancakeStates.FALLING;//下落\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //是否已激活\r\n\r\n    private _actived:boolean;\r\n\r\n    public get actived():boolean {\r\n        return this._actived;\r\n    }\r\n\r\n\r\n    /**\r\n     * 让煎饼掉落\r\n     * \r\n     */\r\n    public active():void {\r\n        if (this._actived) return;\r\n        this._actived = true;\r\n\r\n        this._slices.forEach(function(ele:cc.Node):void {\r\n            let body:cc.RigidBody = ele.getComponent(cc.RigidBody);\r\n            body.type = cc.RigidBodyType.Dynamic;\r\n        });\r\n\r\n        this._state = PancakeStates.FALLING;//下落\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 落在锅底上结算分数\r\n     * \r\n     * @param e \r\n     */\r\n    private onPanHandler(e:cc.Event):void {\r\n        if (this._score > 0) {\r\n            let evt:cc.Event = new cc.Event(PancakeMain.EVENT_GET_SCORE, false);\r\n            evt[\"data\"] = this._score;\r\n            this.node.dispatchEvent(evt);\r\n\r\n            this._score = 0;\r\n        }\r\n    }\r\n\r\n    private _lastDiamondUUID:string;\r\n\r\n    // 饼碰撞开始\r\n    private onBeginContact(contact:cc.PhysicsContact,selfCollider:cc.PhysicsCollider,otherCollider:cc.PhysicsCollider){\r\n        let tag:number = otherCollider[\"tag\"];\r\n        // cc.info(\"【Pancake onBeginContact】\", tag);\r\n\r\n        // 碰撞到锅\r\n        if(tag != 100){\r\n            contact.disabled = true;\r\n        } else {\r\n            //碰撞点\r\n            let points:Array<cc.Vec2> = contact.getWorldManifold().points;\r\n            if (points && points.length > 0) {\r\n                let po:cc.Vec2 = points[0];\r\n                po = selfCollider.body.getLocalPoint(po, null);\r\n                po = selfCollider.body.node.convertToWorldSpace(po);\r\n\r\n                let e:any = new cc.Event(PancakeMain.EVENT_TOUCH_PAN, false);\r\n                e[\"data\"] = po;\r\n                this.node.dispatchEvent(e);\r\n            }\r\n        }\r\n\r\n        // 碰撞到钻石\r\n        if(tag == 200 ){\r\n            let diamondNode:cc.Node = otherCollider.body.node;\r\n            if (this._lastDiamondUUID != diamondNode.uuid) {\r\n                this._lastDiamondUUID = diamondNode.uuid;\r\n\r\n                let e:any = new cc.Event(PancakeMain.EVENT_GET_DIAMOND, false);\r\n                e[\"data\"] = otherCollider.body.node;\r\n                this.node.dispatchEvent(e);\r\n            }\r\n        }\r\n\r\n        //碰撞到墙壁\r\n        if (tag >= 300 && tag < 400) {\r\n            this.node.dispatchEvent(new cc.Event(PancakeMain.EVENT_DIE, false));\r\n        }\r\n    }\r\n\r\n    // 饼碰撞结束\r\n    private onEndContact(contact:cc.PhysicsContact,selfCollider:cc.PhysicsCollider,otherCollider:cc.PhysicsCollider){\r\n        // let tag:number = otherCollider[\"tag\"];\r\n        // cc.info(\"【Pancake onEndContact】\", tag);\r\n\r\n        // // 碰撞到锅\r\n        // if(tag == 100){\r\n        // }\r\n    }\r\n\r\n    //一次接触\r\n    private onPostSolve(contact:cc.PhysicsContact, selfCollider:cc.PhysicsCollider, otherCollider:cc.PhysicsCollider){\r\n        let tag:number = otherCollider[\"tag\"];\r\n        // cc.info(\"【Pancake onPostSolve】\", tag);\r\n\r\n        // 碰撞到锅\r\n        if(tag == 100){\r\n            let theBody:cc.RigidBody = selfCollider.body;\r\n            let velocity:cc.Vec2;//= theBody.getWorldPoint(new cc.Vec2(0, 0), null);\r\n            // velocity = theBody.getLinearVelocityFromWorldPoint(velocity, null);\r\n            // cc.info(velocity.x, velocity.y);\r\n            velocity = theBody.linearVelocity;\r\n            // cc.info(velocity.x, velocity.y, \"theBody.linearVelocity\");\r\n            // velocity.x = 100;\r\n            if (velocity.y > 100) {\r\n                // cc.info(\"施加力\");\r\n\r\n                // let sc:number = 0.5;\r\n                // theBody.applyLinearImpulse(new cc.Vec2(60 * sc, 30 * sc), new cc.Vec2(0, 0), true);\r\n                // let velocity:cc.Vec2 = theBody.getWorldPoint(new cc.Vec2(0, 0), null);\r\n                // velocity = theBody.getLinearVelocityFromWorldPoint(velocity, null);\r\n                // cc.info(\"施加力后\", velocity.x, velocity.y);\r\n\r\n                let sc:number = 0.5;\r\n                theBody.linearVelocity = new cc.Vec2(10, velocity.y * 0.9);\r\n                velocity = theBody.linearVelocity;\r\n                // cc.info(\"施加力后\", velocity.x, velocity.y);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"]}