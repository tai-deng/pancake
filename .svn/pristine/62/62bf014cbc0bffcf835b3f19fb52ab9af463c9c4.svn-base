"use strict";
cc._RF.push(module, '9f7c0EPgJBJLb2asY1+y12v', 'UtilsManager');
// Script/gamecore/managers/UtilsManager.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TweenLite_1 = require("../libs/TweenLite");
/**
 * 游戏功能管理。比如震动关闭、开启
 */
var UtilsManager = /** @class */ (function (_super) {
    __extends(UtilsManager, _super);
    /**
     *
     */
    function UtilsManager() {
        var _this = _super.call(this) || this;
        //==============================================================
        _this._labelToTweenMap = {};
        _this._canVibrate = true;
        //读取本地数据
        var v = cc.sys.localStorage.getItem("__l__soundsManager_vibrateoff");
        if (v == "true") {
            _this.vibrateOff();
        }
        return _this;
    }
    Object.defineProperty(UtilsManager.prototype, "canVibrate", {
        /**
         * 是否可以震动
         */
        get: function () {
            return this._canVibrate;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 关闭震动
     */
    UtilsManager.prototype.vibrateOff = function () {
        if (!this._canVibrate)
            return;
        this._canVibrate = false;
        cc.sys.localStorage.setItem("__l__soundsManager_vibrateoff", true);
    };
    /**
     * 开启震动
     */
    UtilsManager.prototype.vibrateOn = function () {
        if (this._canVibrate)
            return;
        this._canVibrate = true;
        cc.sys.localStorage.removeItem("__l__soundsManager_vibrateoff");
    };
    Object.defineProperty(UtilsManager.prototype, "iphoneXTopBarHeight", {
        //============================================================================
        //iphone x 顶部条高度
        get: function () {
            return 44;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UtilsManager.prototype, "isIphoneX", {
        /**
         * 检查是否是iphoneX
         *
         */
        get: function () {
            try {
                return /iphone/gi.test(navigator.userAgent) && (screen.height == 812 && screen.width == 375);
            }
            catch (error) {
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 将一个label的值增加到或减少到另外一个值。
     * 比如是整数。
     *
     * @param label
     * @param v
     * @param duration          动画时间
     */
    UtilsManager.prototype.labelStringToValue = function (label, v, duration) {
        if (duration === void 0) { duration = 0.5; }
        var uuid = label.uuid;
        var tween = this._labelToTweenMap[uuid];
        if (tween)
            tween.kill();
        var currentV = parseInt(label.string);
        if (isNaN(currentV))
            currentV = 0;
        var step = (currentV > v) ? -1 : 1;
        var obj = { "v": currentV };
        tween = TweenLite_1.TweenLite.to(obj, duration, {
            "v": v,
            "onUpdate": function (obj) {
                var v = Math.floor(obj["v"]);
                label.string = "" + v;
            },
            "onUpdateParams": [obj]
        });
    };
    UtilsManager = __decorate([
        ccclass
    ], UtilsManager);
    return UtilsManager;
}(cc.EventTarget));
exports.default = UtilsManager;

cc._RF.pop();