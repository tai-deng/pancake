"use strict";
cc._RF.push(module, '1d507qdRZdPcatgBlQHTkCv', 'Command');
// Script/gamecore/legs/Command.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameManager_1 = require("../managers/GameManager");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * command
 */
var Command = /** @class */ (function () {
    function Command() {
        //prefab资源加载路径
        this._prefabURL = null;
    }
    Command_1 = Command;
    Object.defineProperty(Command.prototype, "prefabURL", {
        /**
         * 获取资源加载路径
         */
        get: function () {
            return this._prefabURL;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Command.prototype, "prefab", {
        /**
         * 获取资源是否已加载完成
         */
        get: function () {
            if (!this._prefabURL)
                return null;
            return Command_1.prefabMap[this._prefabURL];
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 加载素材
     *
     * @param callback  回调方法
     *
     */
    Command.prototype.loadPrefab = function (callback) {
        if (callback === void 0) { callback = null; }
        if (!this._prefabURL) {
            if (callback != null)
                callback.call(null);
            return;
        }
        if (Command_1.prefabMap[this._prefabURL]) {
            if (callback != null)
                callback.call(null);
            return;
        }
        var command = this;
        cc.info("[Command] load prefab " + this._prefabURL);
        // 加载 Prefab
        cc.loader.loadRes(this._prefabURL, function (err, prefab) {
            cc.info("[Command] prefab loaded", err, prefab);
            if (prefab) {
                Command_1.prefabMap[command._prefabURL] = prefab;
            }
            else {
                cc.info("[Command] prefab load fail:" + command._prefabURL);
            }
            if (callback != null)
                callback.call(null);
        });
    };
    /**
     * 执行命令
     */
    Command.prototype.execute = function () {
    };
    /**
     * 派发事件
     *
     * @param event
     */
    Command.prototype.dispacheEvent = function (event) {
        GameManager_1.default.eventManager.dispatchEvent(event);
    };
    /**
     * 携带数据，派发事件
     *
     * @param eventName
     * @param data
     */
    Command.prototype.dispacheEventWith = function (eventName, data) {
        if (data === void 0) { data = null; }
        GameManager_1.default.eventManager.dispatchEventWith(eventName, data);
    };
    /**
     * prefab url to cc.Prefab
     */
    Command.prefabMap = {};
    Command = Command_1 = __decorate([
        ccclass
    ], Command);
    return Command;
    var Command_1;
}());
exports.default = Command;

cc._RF.pop();