{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\gameScene/assets\\Script\\gameScene\\LevelDetailPanelMain.ts"],"names":[],"mappings":";;;;;AAAA,4CAAuC;AACvC,6DAAwD;AACxD,yCAAoC;AAEpC,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;;;GAGG;AAEH;IAAkD,wCAAY;IAD9D;QAAA,qEAmEC;QAhEG,IAAI;QAEJ,QAAE,GAAW,IAAI,CAAC;QAUlB,uBAAiB,GAAY,IAAI,CAAC;QAUlC,oBAAc,GAAY,IAAI,CAAC;;IA0CnC,CAAC;IAjCG,oCAAK,GAAL;QAEI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,iBAAiB;IAGT,wCAAS,GAAjB;QACI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,6BAAmB,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC1F,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAEtE,IAAI,SAAS,GAAU,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,CAAC;QAEvD,IAAI,aAAuB,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,oBAAU,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtD,IAAI,GAAG,GAAU,oBAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,EAAE;gBAC3B,aAAa,GAAG,IAAI,mBAAS,EAAE,CAAC;gBAChC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC3B,MAAM;aACT;SACJ;QAED,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,6BAAmB,CAAC,CAAC,SAAS,GAAG,aAAa,CAAC;SAClF;aAAM;YACH,QAAQ;YACR,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;YACtG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;YAC/C,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;SACrC;IACL,CAAC;IA7DD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACA;IAIlB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kEACO;IAMzB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAC,EAAE,CAAC,KAAK;YACb,WAAW,EAAC,QAAQ;SACvB,CAAC;mEACgC;IAIlC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+DACI;IAMtB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAC,EAAE,CAAC,KAAK;YACb,WAAW,EAAC,QAAQ;SACvB,CAAC;gEAC6B;IAxBd,oBAAoB;QADxC,OAAO;OACa,oBAAoB,CAkExC;IAAD,2BAAC;CAlED,AAkEC,CAlEiD,EAAE,CAAC,SAAS,GAkE7D;kBAlEoB,oBAAoB","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\gameScene","sourcesContent":["import GameConfig from \"../GameConfig\";\r\nimport LevelDetailItemMain from \"./LevelDetailItemMain\";\r\nimport LevelData from \"./LevelData\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * 等级详细信息面板\r\n * \r\n */\r\n@ccclass\r\nexport default class LevelDetailPanelMain extends cc.Component {\r\n\r\n    //背景\r\n    @property(cc.Node)\r\n    bg:cc.Node = null;\r\n\r\n    //当前等级详细显示节点\r\n    @property(cc.Node)\r\n    currentLevelNode:cc.Node;\r\n\r\n    @property({\r\n        type:cc.Label,\r\n        displayName:\"当前等级文本\"\r\n    })\r\n    currentLevelLabel:cc.Label = null;\r\n\r\n    //下一等级详细显示节点\r\n    @property(cc.Node)\r\n    nextLevelNode:cc.Node;\r\n\r\n    @property({\r\n        type:cc.Label,\r\n        displayName:\"下级等级文本\"\r\n    })\r\n    nextLevelLabel:cc.Label = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    //当前等级信息\r\n    public currentLevelData:LevelData;\r\n\r\n    start () {\r\n\r\n        this.refreshUI();\r\n    }\r\n\r\n    // update (dt) {}\r\n\r\n\r\n    private refreshUI():void {\r\n        this.currentLevelNode.getComponent(LevelDetailItemMain).levelData = this.currentLevelData;\r\n        this.currentLevelLabel.string = \"等级\" + this.currentLevelData[\"level\"];\r\n\r\n        let nextLevel:number = this.currentLevelData.level + 1;\r\n\r\n        let nextLevelData:LevelData;\r\n        for (let i:number = 0; i < GameConfig.LEVELS.length; i++) {\r\n            let obj:object = GameConfig.LEVELS[i];\r\n            if (obj[\"level\"] == nextLevel) {\r\n                nextLevelData = new LevelData();\r\n                nextLevelData.fromObj(obj);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (nextLevelData) {\r\n            this.nextLevelNode.getComponent(LevelDetailItemMain).levelData = nextLevelData;\r\n        } else {\r\n            //最后一个等级\r\n            this.bg.height = this.node.height / 2 - (this.currentLevelNode.y - this.currentLevelNode.height - 40);\r\n            this.nextLevelLabel.node.parent.active = false;\r\n            this.nextLevelNode.active = false;\r\n        }\r\n    }\r\n}\r\n"]}