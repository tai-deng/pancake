"use strict";
cc._RF.push(module, 'fa3bekhbrhEfK807M/d8ZPa', 'DiamondMain');
// Script/gameScene/DiamondMain.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * 宝石类
 */
var DiamondMain = /** @class */ (function (_super) {
    __extends(DiamondMain, _super);
    function DiamondMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //数量
        _this.countLabel = null;
        _this.iconNode = null;
        //数量
        _this.count = 1;
        return _this;
        // update (dt) {
        // }
    }
    DiamondMain.prototype.onLoad = function () {
    };
    DiamondMain.prototype.start = function () {
        if (this.count > 1) {
            this.countLabel.string = "×" + this.count;
        }
        this.node.opacity = 0;
        this.node.runAction(cc.fadeTo(0.3, 255));
        this.iconNode.scale = 0.5;
        this.iconNode.runAction(cc.scaleTo(0.3, 1, 1).easing(cc.easeBounceIn()));
    };
    /**
     * 消失
     */
    DiamondMain.prototype.doDisappear = function () {
        this.node.getComponent(cc.RigidBody).enabled = false;
        this.countLabel.node.active = false;
        var ani = this.iconNode.getComponent(cc.Animation);
        var aniState = ani.play();
        // 注册
        // ani.on('play',      this.onPlay,        this);
        // ani.on('stop',      this.onStop,        this);
        // ani.on('lastframe', this.onLastFrame,   this);
        ani.on('finished', this.onDiamondAniFinished, this);
        // ani.on('pause',     this.onPause,       this);
        // ani.on('resume',    this.onResume,      this);
    };
    DiamondMain.prototype.onDiamondAniFinished = function (e) {
        this.node.removeFromParent(true);
    };
    __decorate([
        property(cc.Label)
    ], DiamondMain.prototype, "countLabel", void 0);
    __decorate([
        property(cc.Node)
    ], DiamondMain.prototype, "iconNode", void 0);
    DiamondMain = __decorate([
        ccclass
    ], DiamondMain);
    return DiamondMain;
}(cc.Component));
exports.default = DiamondMain;

cc._RF.pop();