import GameManager from "../gamecore/managers/GameManager";
import StateManage from "../StateManage/StateManage";


const {ccclass, property} = cc._decorator;
/**
 * 展示游戏结果
 */
@ccclass
export default class Over extends cc.Component {

    private static _instance:Over = null;
    public scene:cc.Node;
    @property(cc.Node)
    off:cc.Node = null;
    @property(cc.Node)
    reset:cc.Node = null;
    @property(cc.Node)
    share:cc.Node = null;

    public static get instance():Over {
        if (!Over._instance) Over._instance = new Over();
        return Over._instance;
    }

    initialize(node:cc.Node):void{
        this.scene = node;
        this.off = node.getChildByName("off");
        this.reset = node.getChildByName("reset");
        this.share = node.getChildByName("share");
    }
    /**
     * show
     */
    show(){
        cc.find("Canvas/over").active = true;
        cc.find("Canvas/over").zIndex = 10;
        cc.find("Canvas/PageTop").zIndex = 11;
        cc.find("Canvas/PageTop/grade").active = true;
        let score = StateManage.instance.getData(StateManage.KEY_SCORE);
        cc.find("Canvas/over/content/currentScore/Label").getComponent(cc.Label).string = score;
        cc.find("Canvas/PageTop/grade/Label").getComponent(cc.Label).string = score;
    }
    hidden(){
        cc.find("Canvas/over").active =false;
        cc.find("Canvas/PageTop/grade").active = false;
        cc.log("执行~~~~1")
    }
    // 使用复活卡
    useReviveCar(){
        cc.log("使用复活卡")
    }
    // 看视频继续游戏
    keepUpGema(){
        cc.log("看视频继续游戏")
        this.hidden();
    }
    // 重新开始游戏
    resetGame(){
        // this.node.parent.removeChild(this.node,true);
        this.hidden();
        StateManage.instance.setData(StateManage.KEY_ISOVER,0);
        cc.log("重新开始游戏")
    }
    onLoad(){
        // StateManage.instance.on("change", this.stateChangeHandler, this);

    }
    // 数据值监控
    private stateChangeHandler(e:cc.Event):void {
        /* let key:string = StateManage.instance.lastChangedKey;
        // 监控游戏是否结束 1 游戏结束展示页面 2 隐藏游戏结束页面
        if (key == StateManage.KEY_ISOVER && StateManage.instance.isOver == 1) {
        } */
    }
    onDestroy() {
        // StateManage.instance.off("change", this.stateChangeHandler);
    }
}
