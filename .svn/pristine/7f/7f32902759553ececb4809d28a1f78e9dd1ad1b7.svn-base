{"version":3,"sources":["Jewels.ts"],"names":[],"mappings":";;;;;AAAA,0DAAqD;AAE/C,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAAmC,yBAAY;IAD/C;QAAA,qEA2DC;QAvDG,YAAM,GAAyB,EAAE,CAAC;QAElC,aAAO,GAAW,IAAI,CAAC;QAChB,cAAQ,GAAkB,IAAI,CAAC;QAC9B,gBAAU,GAAW,IAAI,CAAC;;IAmDtC,CAAC;IAjDU,sBAAM,GAAb;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,CAAC;QACzC,MAAM,IAAI,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;QAChB,IAAI,KAAK,GAAG,GAAG,CAAC;QAChB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,KAAK,GAAC,CAAC,GAAG,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QAClE,IAAI,GAAG,GAAG,EAAE,CAAC,aAAa,CACtB,EAAE,CAAC,QAAQ,CACP,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACnB,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC3B,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,sBAAM,GAAN;QACI,4BAA4B;QAC5B,qBAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAEO,kCAAkB,GAA1B,UAA2B,CAAU;QACjC,IAAI,GAAG,GAAU,qBAAW,CAAC,QAAQ,CAAC,cAAc,CAAC;QAEjD,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;QACtB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAC7B;;;;YAII;IACR,CAAC;IAEA,qBAAK,GAAL;QACG,kBAAkB;QAClB,qBAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,qBAAW,CAAC,eAAe,EAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IACD,sBAAM,GAAN,UAAQ,EAAE;QACN;;;YAGI;IACR,CAAC;IAtDD;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;yCACO;IAElC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACK;IALN,KAAK;QADzB,OAAO;OACa,KAAK,CA0DzB;IAAD,YAAC;CA1DD,AA0DC,CA1DkC,EAAE,CAAC,SAAS,GA0D9C;kBA1DoB,KAAK","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Jewels","sourcesContent":["import StateManage from \"../StateManage/StateManage\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Jewel extends cc.Component {\r\n\r\n    @property([cc.SpriteFrame])\r\n    jewels:Array<cc.SpriteFrame> = [];\r\n    @property(cc.Node)\r\n    terrace:cc.Node = null;\r\n    public newJewel:cc.SpriteFrame = null;\r\n    private terracePos:cc.Vec2 = null;\r\n\r\n    public create():void{\r\n        let random = Math.floor(Math.random()*3);\r\n        random == 3? 0 : random;\r\n        this.newJewel = this.jewels[random];\r\n        this.terracePos = this.terrace.getPosition();\r\n        let x_Max = 60;\r\n        let x_Min = -60;\r\n        let y_Max = 200;\r\n        let y_Min = 50;\r\n        let x = Math.floor(Math.random()*x_Max*2 - (x_Max/2));\r\n        let y = Math.floor(Math.random()*y_Min + y_Max);\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.newJewel;\r\n        this.node.setPosition(this.terracePos.x + x,this.terracePos.y + y)\r\n        let seq = cc.repeatForever(\r\n            cc.sequence(\r\n                cc.moveBy(1, 0, 15),\r\n                cc.moveBy(1, 0, -15),\r\n        ));\r\n        this.node.runAction(seq);\r\n        this.node.active = true; \r\n    }\r\n\r\n    onLoad(){\r\n        // this.node.active = false;\r\n        StateManage.instance.on(\"change\", this.stateChangeHandler, this);\r\n    }\r\n\r\n    private stateChangeHandler(e:cc.Event):void {\r\n        let key:string = StateManage.instance.lastChangedKey;\r\n\r\n            cc.log(\"create@@@@@@\")\r\n            this.node.active = false;\r\n        /* if (key == StateManage.KEY_JEWEL_STATE && StateManage.instance.jewel == 1) {\r\n            this.create();\r\n            cc.log(\"create!!!!!!!!!!!!\")\r\n            StateManage.instance.setData(StateManage.KEY_JEWEL_STATE,2);\r\n        } */\r\n    }\r\n\r\n     start(){\r\n        //  this.create();\r\n        StateManage.instance.setData(StateManage.KEY_JEWEL_STATE,1)\r\n    }\r\n    update (dt) {\r\n        /* if(StateManage.instance.getData(StateManage.KEY_JEWEL_STATE) == 1){\r\n            this.create();\r\n            StateManage.instance.setData(StateManage.KEY_JEWEL_STATE,2);\r\n        } */\r\n    }\r\n}\r\n"]}