{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\gamecore\\dailytask/assets\\Script\\gamecore\\dailytask\\DailyTaskManager.ts"],"names":[],"mappings":";;;;;AACA,qDAAgD;AAChD,2DAAsD;AAGhD,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;;GAEG;AAEH;IAA8C,oCAAO;IAmBjD;QAAA,YACI,iBAAO,SAOV;QAID;;WAEG;QACK,iBAAW,GAAwB,EAAE,CAAC;QAb1C,IAAI,kBAAgB,CAAC,SAAS;YAAE,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAExF,kBAAgB,CAAC,SAAS,GAAG,KAAI,CAAC;QAGlC,KAAI,CAAC,WAAW,EAAE,CAAC;;IACvB,CAAC;yBA3BgB,gBAAgB;IAWjC,sBAAkB,4BAAQ;QAJ1B;;;WAGG;aACH;YACI,IAAI,CAAC,kBAAgB,CAAC,SAAS,EAAE;gBAC7B,IAAI,kBAAgB,EAAE,CAAC;aAC1B;YAED,OAAO,kBAAgB,CAAC,SAAS,CAAC;QACtC,CAAC;;;OAAA;IAuBD,sBAAW,wCAAU;QAHrB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACrC,CAAC;;;OAAA;IAID;;OAEG;IACI,sCAAW,GAAlB;QACI,UAAU;QACV,IAAI,GAAG,GAAQ,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,MAAM,GAAU,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QACxF,IAAI,WAAW,GAAU,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAgB,CAAC,QAAQ,CAAC,CAAC;QAChF,IAAI,WAAW,KAAK,MAAM;YAAE,OAAO;QAEnC,IAAI,SAAS,GAAW,KAAK,CAAC;QAE9B,OAAM,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,yBAAe,CAAC,SAAS,EAAE;YACvD,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YACvB,SAAS,GAAG,IAAI,CAAC;SACpB;QAED,OAAM,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,yBAAe,CAAC,SAAS,EAAE;YACvD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAC5C,SAAS,GAAG,IAAI,CAAC;SACpB;QAED,IAAI,SAAS,EAAE;YACX,UAAU;YACV,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE/D,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,4BAAkB,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;SAClF;IACL,CAAC;IAGD;;OAEG;IACK,wCAAa,GAArB;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAID;;;OAGG;IACI,gCAAK,GAAZ;QACI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,kBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE1D,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IA7FD,UAAU;IACK,yBAAQ,GAAU,4BAA4B,CAAC;IAH7C,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAgGpC;IAAD,uBAAC;;CAhGD,AAgGC,CAhG6C,EAAE,CAAC,IAAI,GAgGpD;kBAhGoB,gBAAgB","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\gamecore\\dailytask","sourcesContent":["import DailyTaskBase from \"./DailyTaskBase\";\r\nimport DailyTaskConfig from \"./DailyTaskConfig\";\r\nimport DailyTaskEventType from \"./DailyTaskEventType\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * 每日任务管理器\r\n */\r\n@ccclass\r\nexport default class DailyTaskManager extends cc.Node {\r\n\r\n    //本地保存的键名称\r\n    private static KEY_NAME:string = \"__taskmanager_refresh_date\";\r\n\r\n    private static _instance:DailyTaskManager;\r\n\r\n    /**\r\n     * 获取每日任务管理器单例\r\n     * \r\n     */\r\n    public static get instance():DailyTaskManager {\r\n        if (!DailyTaskManager._instance) {\r\n            new DailyTaskManager();\r\n        }\r\n\r\n        return DailyTaskManager._instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        if (DailyTaskManager._instance) throw new Error(\"Please use DailyTaskManager.instance\");\r\n\r\n        DailyTaskManager._instance = this;\r\n\r\n\r\n        this.refreshTask();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 今日任务\r\n     */\r\n    private _todayTasks:Array<DailyTaskBase> = [];\r\n\r\n\r\n    /**\r\n     * 获取今日任务\r\n     */\r\n    public get todayTasks():Array<DailyTaskBase> {\r\n        return this._todayTasks.concat();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 刷新任务\r\n     */\r\n    public refreshTask():void {\r\n        //获取上次刷新时间\r\n        let now:Date = new Date();\r\n        let todayV:string = \"\" + now.getFullYear() + \"-\" + now.getMonth() + \"-\" + now.getDate();\r\n        let refreshDate:string = cc.sys.localStorage.getItem(DailyTaskManager.KEY_NAME);\r\n        if (refreshDate === todayV) return;\r\n        \r\n        let hasChange:boolean = false;\r\n\r\n        while(this._todayTasks.length > DailyTaskConfig.MAX_COUNT) {\r\n            this._todayTasks.pop();\r\n            hasChange = true;\r\n        }\r\n\r\n        while(this._todayTasks.length < DailyTaskConfig.MAX_COUNT) {\r\n            this._todayTasks.push(this.createNewTask());\r\n            hasChange = true;\r\n        }\r\n\r\n        if (hasChange) {\r\n            //记录任务刷新日期\r\n            cc.sys.localStorage.setItem(DailyTaskManager.KEY_NAME, todayV);\r\n\r\n            this.dispatchEvent(new cc.Event(DailyTaskEventType.TODAY_TASK_CHANGED, false));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建一个新的任务\r\n     */\r\n    private createNewTask():DailyTaskBase {\r\n        return null;\r\n    }\r\n\r\n\r\n    \r\n    /**\r\n     * 重置\r\n     * \r\n     */\r\n    public reset():void {\r\n        cc.sys.localStorage.removeItem(DailyTaskManager.KEY_NAME);\r\n\r\n        this._todayTasks = [];\r\n        this.refreshTask();\r\n    }\r\n}\r\n"]}