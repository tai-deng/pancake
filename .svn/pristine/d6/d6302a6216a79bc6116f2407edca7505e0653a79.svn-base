{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\gamecore\\managers/assets\\Script\\gamecore\\managers\\DataManager.ts"],"names":[],"mappings":";;;;;AACA,kDAA6C;AAC7C,6CAAwC;AAExC,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;;GAEG;AAEH;IADA;QAGY,UAAK,GAAU,EAAE,CAAC;IAwC9B,CAAC;IAjCG,sBAAW,uCAAc;QAHzB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;QAChC,CAAC;;;OAAA;IAGD;;;;;OAKG;IACI,6BAAO,GAAd,UAAe,GAAU,EAAE,KAAS;QAChC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAExB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAE3B,qBAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,uBAAa,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;SAC9E;IACL,CAAC;IAGD;;;;OAIG;IACI,6BAAO,GAAd,UAAe,GAAU;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAtCgB,WAAW;QAD/B,OAAO;OACa,WAAW,CA0C/B;IAAD,kBAAC;CA1CD,AA0CC,IAAA;kBA1CoB,WAAW","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\gamecore\\managers","sourcesContent":["import Command from \"../legs/Command\";\nimport GameCoreEvent from \"../GameCoreEvent\";\nimport GameManager from \"./GameManager\";\n\n// Learn TypeScript:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n/**\n * 数据管理器。可以通过该管理器管理全局数据。\n */\n@ccclass\nexport default class DataManager {\n    \n    private _data:object = {};\n\n    private _lastChangedKey:string;\n\n    /**\n     * 获取上次变化值的key值\n     */\n    public get lastChangedKey():string {\n        return this._lastChangedKey;\n    }\n\n\n    /**\n     * 设置全局数据\n     * \n     * @param key               字段名\n     * @param value             字段值\n     */\n    public setData(key:string, value:any):void {\n        if (this._data[key] !== value) {\n            this._data[key] = value;\n\n            this._lastChangedKey = key;\n\n            GameManager.eventManager.dispatchEventWith(GameCoreEvent.DATA_CHANGE, key);\n        }\n    }\n\n\n    /**\n     * 获取全局数据\n     * \n     * @param key \n     */\n    public getData(key:string):any {\n        return this._data[key];\n    }\n\n    \n\n}\n"]}