{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Task/assets\\Script\\Task\\Task.ts"],"names":[],"mappings":";;;;;AAAA,qCAAgC;AAEhC,uCAAkC;AAClC,uCAAkC;AAE5B,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAAkC,wBAAY;IAD9C;QAAA,qEA2DC;QAzDW,SAAG,GAAU,CAAC,CAAC;QAEvB,OAAO;QAEP,WAAK,GAAkB,EAAE,CAAC;QAC1B,OAAO;QACC,WAAK,GAAiB,EAAE,CAAC;QACjC,OAAO;QACC,iBAAW,GAAiB,EAAE,CAAC;QAC/B,UAAI,GAAQ,IAAI,IAAI,EAAE,CAAC;;IAgDnC,CAAC;IA5CG,sBAAI,yBAAO;aAAX;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aACD,UAAY,CAAe;YACvB,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;gBACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;QACL,CAAC;;;OANA;IAQD,qBAAM,GAAN;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,cAAI,EAAE,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,oBAAK,GAAL;QACI,eAAe;QAEf,IAAI,CAAC,OAAO,GAAG,kBAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC3C,kBAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAA;IAChE,CAAC;IACO,0BAAW,GAAnB,UAAoB,EAAW;QAC3B,IAAI,CAAC,OAAO,GAAG,kBAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC/C,CAAC;IACO,uBAAQ,GAAhB;QACI,IAAG,CAAC,IAAI,CAAC,eAAe;YAAC,OAAO;QAChC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAClC,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAY,CAAA;YAC3C,IAAI,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACzD;IACL,CAAC;IACD;;;;;;OAMG;IACH,qBAAM,GAAN,UAAQ,EAAE;QACN,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;YACzB,kBAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC/B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;SAChB;IACL,CAAC;IApDD;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;uCACM;IALT,IAAI;QADxB,OAAO;OACa,IAAI,CA0DxB;IAAD,WAAC;CA1DD,AA0DC,CA1DiC,EAAE,CAAC,SAAS,GA0D7C;kBA1DoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Task","sourcesContent":["import Json from \"../Json/Json\";\r\nimport StateManage from \"../StateManage/StateManage\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport TaskMode from \"./TaskMode\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Task extends cc.Component {\r\n    private sec:number = 0;\r\n    \r\n    // 任务节点\r\n    @property([cc.Node])\r\n    items:Array<cc.Node> = [];\r\n    // 所有任务\r\n    private tasks:Array<object> = [];\r\n    // 当前任务\r\n    private currentTask:Array<object> = [];\r\n    private date:Date = new Date();\r\n\r\n    \r\n    private _itemData:Array<object>;\r\n    get useData():Array<object> {\r\n        return this._itemData;\r\n    }\r\n    set useData(v:Array<object>) {\r\n        if (this._itemData != v) {\r\n            this._itemData = v;\r\n            this.initTask();\r\n        }\r\n    }\r\n\r\n    onLoad () {\r\n        this.tasks = new Json().tasks;\r\n    }\r\n\r\n    start () {\r\n        // this.init();\r\n        \r\n        this.useData = TaskMode.instance.handOut();\r\n        TaskMode.instance.on(\"useDataChanged\",this.dataChanged,this)\r\n    }\r\n    private dataChanged(ev:cc.Event):void{\r\n        this.useData = TaskMode.instance.handOut();\r\n    }\r\n    private initTask(){\r\n        if(!this._isOnLoadCalled)return;\r\n        for(let i = 0;i<this.items.length;i++){\r\n            let item:cc.Node = this.items[i] as cc.Node\r\n            item.getComponent(TaskItem)[\"data\"] = this.useData[i];\r\n        }\r\n    }\r\n    /**\r\n     * 定时更新任务\r\n     * 1.获取当前的日期 年月日\r\n     * 2.获取下一天0点的时间戳\r\n     * 3.当前的时间大于这个时间就给一个刷新机会\r\n     * 4.给过机会之后重新获取当前的日期 年月日\r\n     */\r\n    update (dt) {\r\n        this.sec += dt;\r\n        if(Math.floor(this.sec) == 1){\r\n            TaskMode.instance.setTimeDay();\r\n            this.sec = 0;\r\n        }\r\n    }\r\n}\r\n"]}