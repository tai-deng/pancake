"use strict";
cc._RF.push(module, 'ed6cccXls1LR5n5h+MNHO9B', 'WXABannerAd');
// Script/gamecore/wechat/WXABannerAd.ts

Object.defineProperty(exports, "__esModule", { value: true });
var WXBannerAd_1 = require("./WXBannerAd");
var WXEventType_1 = require("./WXEventType");
var GameManager_1 = require("../managers/GameManager");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * 一个banner广告
 */
var WXABannerAd = /** @class */ (function (_super) {
    __extends(WXABannerAd, _super);
    function WXABannerAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.adID = "";
        _this.adLocation = "";
        //广告最大宽度
        _this.maxWidth = 0;
        return _this;
    }
    WXABannerAd.prototype.start = function () {
        this.node.scale = 0;
        if (!this.adLocation)
            this.adLocation = WXBannerAd_1.default.LOCATION_BOTTOM_CENTER;
        if (this.maxWidth <= 0)
            this.maxWidth = NaN;
        this._wxBannerAd = new WXBannerAd_1.default(this.adID, this.adLocation, this.maxWidth);
        this._wxBannerAd.on(WXEventType_1.default.BANNER_AD_HIDE, this.adHideHandler, this);
        this._wxBannerAd.on(WXEventType_1.default.BANNER_AD_SHOW, this.adShowHandler, this);
        this._wxBannerAd.on(WXEventType_1.default.BANNER_AD_RESIZE, this.adResizeHandler, this);
        this._wxBannerAd.show();
    };
    /**
     * banner显示
     *
     * @param e
     */
    WXABannerAd.prototype.adShowHandler = function (e) {
        this.node.active = true;
    };
    /**
     * banner隐藏
     *
     * @param e
     */
    WXABannerAd.prototype.adHideHandler = function (e) {
        this.node.active = false;
    };
    WXABannerAd.prototype.adResizeHandler = function (e) {
        var rect = this._wxBannerAd.adRect;
        rect = GameManager_1.default.utilsManager.fromScreenRect(rect);
        // cc.info("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@1");
        // cc.info("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2");
        // cc.info("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@3");
        // cc.info(rect.x, rect.y, rect.width, rect.height);
        this.node.x = rect.x;
        this.node.y = rect.y;
        this.node.scaleX = rect.width / this.node.width;
        this.node.scaleY = rect.height / this.node.height;
        this.node.dispatchEvent(new cc.Event(WXEventType_1.default.BANNER_AD_RESIZE, false));
    };
    // update (dt) {}
    WXABannerAd.prototype.onDestroy = function () {
        if (this._wxBannerAd) {
            this._wxBannerAd.off(WXEventType_1.default.BANNER_AD_HIDE, this.adHideHandler);
            this._wxBannerAd.off(WXEventType_1.default.BANNER_AD_SHOW, this.adShowHandler);
            this._wxBannerAd.off(WXEventType_1.default.BANNER_AD_RESIZE, this.adResizeHandler);
            // this._wxBannerAd.hide();
            this._wxBannerAd.dispose();
            this._wxBannerAd = null;
        }
    };
    __decorate([
        property
    ], WXABannerAd.prototype, "adID", void 0);
    __decorate([
        property
    ], WXABannerAd.prototype, "adLocation", void 0);
    __decorate([
        property
    ], WXABannerAd.prototype, "maxWidth", void 0);
    WXABannerAd = __decorate([
        ccclass
    ], WXABannerAd);
    return WXABannerAd;
}(cc.Component));
exports.default = WXABannerAd;

cc._RF.pop();