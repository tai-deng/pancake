"use strict";
cc._RF.push(module, 'c85d3FL0lREIomW62wgnslM', 'AlertCommand');
// Script/commands/AlertCommand.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Command_1 = require("../gamecore/legs/Command");
var GameManager_1 = require("../gamecore/managers/GameManager");
var AlertMain_1 = require("../AlertMain");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var AlertCommand = /** @class */ (function (_super) {
    __extends(AlertCommand, _super);
    function AlertCommand() {
        var _this = _super.call(this) || this;
        _this._prefabURL = "toast/toast";
        return _this;
    }
    AlertCommand.prototype.execute = function () {
        var values = this.data;
        var toast = cc.instantiate(this.prefab);
        var script = toast.getComponent(AlertMain_1.default);
        script.title = values[0];
        script.callbak = values[1];
        GameManager_1.default.popUpManager.addPopUp(toast);
    };
    AlertCommand = __decorate([
        ccclass
    ], AlertCommand);
    return AlertCommand;
}(Command_1.default));
exports.default = AlertCommand;

cc._RF.pop();