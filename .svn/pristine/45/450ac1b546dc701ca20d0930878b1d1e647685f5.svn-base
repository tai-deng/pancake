import WXCore from "../gamecore/wechat/WXCore";
import GameManager from "../gamecore/managers/GameManager";
import GameEventNames from "../GameEventNames";
import StateManage from "../StateManage/StateManage";

const {ccclass, property} = cc._decorator;

@ccclass
export default class TaskItem extends cc.Component {

    @property(cc.Label)
    taskName:cc.Label = null;
    @property(cc.Label)
    taskDetails:cc.Label = null;
    @property(cc.Label)
    plan:cc.Label = null;
    @property(cc.Node)
    progress:cc.Node = null;
    public itemTatus:object = {};
    public _plan:number;


    //已领取按钮
    @property(cc.SpriteFrame)
    rewardedBtnSF:cc.SpriteFrame = null;
    //未领取按钮
    @property(cc.SpriteFrame)
    rewardedBtnNO:cc.SpriteFrame = null;
    // 当前item索引
    private _itemIndex:number;
    // 刷新任务的次数
    private _taskNum:number;
    // 是否领取奖励
    private _isGain:number;

    onLoad () {}
    start () {}

    private _itemData:object;
    get itemData():object {
        return this._itemData;
    }
    set itemData(v:object) {
        if (this._itemData != v) {
            this._itemData = v;
            this.init();
        }
    }
    // 初始化逻辑层
    private init(){
        if (!this._isOnLoadCalled) return;
        if (!this._itemData) return;
        let data = this.itemData;
        let planValue = StateManage.instance.getData(data["value"]);
        this._itemIndex = this.node["itemIndex"];
        this._taskNum = StateManage.instance.getData("tasknum"+this._itemIndex);
        this._isGain = StateManage.instance.getData("isgaina"+this._itemIndex);

        if(planValue >= data["goal"]){
            this._plan = data["goal"];
            this.itemTatus["finish"] =1;

            if(this._isGain == 1){
                this.itemTatus["gain"] = 1;

            }else if(this._isGain == 2){
                this.itemTatus["gain"] = 2;

            }else if(this._isGain == 0){
                StateManage.instance.setData("isgaina"+this._itemIndex,2);
            }
        }else{
            this._plan = planValue;
            this.itemTatus["finish"] =2;
        }
        this.refreshUI();
    }
    // 更新UI
    private refreshUI():void{
        let data = this.itemData;
        this.taskName.string = data["title"];
        this.taskDetails.string = "任务奖励：宝石×"+data["awardNum"];
        if(this.itemTatus["finish"] ==1){
            
            cc.find("right/bottom/playbar",this.node).active = false;

            if(this.itemTatus["gain"] ==1){
                cc.find("right/bottom/rewarded",this.node).active = true;
            }

            if(this.itemTatus["gain"] ==2){
                cc.find("right/bottom/affirm",this.node).active = true;
            }
            cc.find("refresh",this.node).active = false;
        }
        if(this.itemTatus["finish"] ==2){
            cc.find("right/bottom/rewarded",this.node).active = false;
            cc.find("right/bottom/affirm",this.node).active = false;
            cc.find("right/bottom/playbar",this.node).active = true;
            if(this._taskNum > 0){
                cc.find("refresh",this.node).active = true;
            }else{
                cc.find("refresh",this.node).active = false;
            }
        }
        this.plan.string = this._plan + "/" + data["goal"];
        this.progress.width = (116/data["goal"]) * this._plan;
        
    }
    /**
     * 完成任务获取指定奖励
     * 任务状态 1 完成了    2 未完成    finish
     * 完成了   1 已领取    2 未领取    gain
     */
    public affirmBtn(event:cc.Event):void{
        let script:TaskItem = this;
        if(this.itemTatus["gain"] == 2){
            let temp = StateManage.instance.getData(this.itemData["awardName"]) + this.itemData["awardNum"];
            StateManage.instance.setData(this.itemData["awardName"],temp);
            WXCore.showToast("完成任务获取"+this.itemData["awardNum"]+"钻石奖励!");
        }
        this.itemTatus["gain"] = 1;
        StateManage.instance.setData("isgaina"+this._itemIndex,1);
        this.refreshUI();
    }
    // 开始游戏或者分享
    public playbarBtn(event:cc.Event):void{
        cc.log("开始游戏或者分享");
    }
    // 刷新任务
    public refresh(){
        let title:string = "";
        let script:TaskItem = this;
        let callback:Function = function(){};
        cc.log(this._taskNum)
        if(this._taskNum > 0){
            title = "要观看一次广告来替换这个任务吗？";
            callback = function(label:string):void {
                cc.info(label)
                if (label == "ok") {
                    script.affirm();
                }
                if(label == "off"){}
            }
            GameManager.eventManager.dispatchEventWith(GameEventNames.SHOW_ALERT, [title, callback])
        }
    }
    // 确认更新
    public affirm(){
        this.node.dispatchEvent(new cc.Event("getData", false))
        StateManage.instance.setData("tasknum"+this._itemIndex,this._taskNum-1)
        StateManage.instance.setData("isgaina"+this._itemIndex,2);
        this.init();
    }
    // update (dt) {}

}
