"use strict";
cc._RF.push(module, 'a54eaeAWylK1JFbdaxHKGpm', 'GameOverPanelMain');
// Script/gameScene/GameOverPanelMain.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameManager_1 = require("../gamecore/managers/GameManager");
var StateManage_1 = require("../StateManage/StateManage");
var WXRewardVideoAd_1 = require("../gamecore/wechat/WXRewardVideoAd");
var WXCore_1 = require("../gamecore/wechat/WXCore");
var WXEventType_1 = require("../gamecore/wechat/WXEventType");
var GameCoreEvent_1 = require("../gamecore/GameCoreEvent");
var XYJAPI_1 = require("../gamecore/xiaoyaoji/XYJAPI");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * 展示游戏结果
 */
var GameOverPanelMain = /** @class */ (function (_super) {
    __extends(GameOverPanelMain, _super);
    function GameOverPanelMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //播放视频广告
        _this.playVideoAdBtn = null;
        //再来一次
        _this.playAgainBtn = null;
        //使用复活卡
        _this.userCardBtn = null;
        //分数显示
        _this.scoreLabel = null;
        _this._passedTime = 0;
        return _this;
    }
    GameOverPanelMain.prototype.start = function () {
        var score = StateManage_1.default.instance.getData(StateManage_1.default.KEY_SCORE);
        this.scoreLabel.string = "" + score;
        this.playAgainBtn.on(cc.Node.EventType.TOUCH_END, this.playAgainBtnTapHandler, this);
        this.playVideoAdBtn.on(cc.Node.EventType.TOUCH_END, this.playVideoAdBtnTapHandler, this);
        this.userCardBtn.on(cc.Node.EventType.TOUCH_END, this.userCardBtnBtnTapHandler, this);
        this.schedule(this.checkTime, 1, 10000);
    };
    /**
     * 检查时间
     */
    GameOverPanelMain.prototype.checkTime = function () {
        if (WXRewardVideoAd_1.default.isPlaying)
            return;
        this._passedTime++;
        if (this._passedTime > 6) {
            //进入小排行榜场景
            cc.director.loadScene("indexScene");
        }
    };
    /**
     * 点击在来一次
     *
     * @param e
     */
    GameOverPanelMain.prototype.playAgainBtnTapHandler = function (e) {
        GameManager_1.default.soundsManager.playTapSound();
        cc.director.loadScene("gameScene");
    };
    /**
     * 点击播放视频
     *
     * @param e
     */
    GameOverPanelMain.prototype.playVideoAdBtnTapHandler = function (e) {
        GameManager_1.default.soundsManager.playTapSound();
        //检查是否广告是否可用
        if (WXRewardVideoAd_1.default.isReady) {
            WXCore_1.default.showToast("微信视频暂时无法展现!");
            return;
        }
        GameManager_1.default.eventManager.on(WXEventType_1.default.REWARD_VIDEO_AD_CLOSE, this.rewardVideoEventsHandler, this);
        GameManager_1.default.eventManager.on(WXEventType_1.default.REWARD_VIDEO_AD_ERROR, this.rewardVideoEventsHandler, this);
        GameManager_1.default.eventManager.on(WXEventType_1.default.REWARD_VIDEO_AD_COMPLETE, this.rewardVideoEventsHandler, this);
    };
    /**
     * 视频广告事件控制
     *
     * @param e
     */
    GameOverPanelMain.prototype.rewardVideoEventsHandler = function (e) {
        GameManager_1.default.eventManager.off(WXEventType_1.default.REWARD_VIDEO_AD_CLOSE, this.rewardVideoEventsHandler, this);
        GameManager_1.default.eventManager.off(WXEventType_1.default.REWARD_VIDEO_AD_ERROR, this.rewardVideoEventsHandler, this);
        GameManager_1.default.eventManager.off(WXEventType_1.default.REWARD_VIDEO_AD_COMPLETE, this.rewardVideoEventsHandler, this);
        if (e.type == WXEventType_1.default.REWARD_VIDEO_AD_COMPLETE) {
            //广告播放完成后，关闭面板，继续游戏
            this.resurrect();
        }
        else {
            this._passedTime = 3;
        }
    };
    /**
     * 点击复活卡
     *
     * @param e
     */
    GameOverPanelMain.prototype.userCardBtnBtnTapHandler = function (e) {
        GameManager_1.default.soundsManager.playTapSound();
        var script = this;
        if (XYJAPI_1.default.reviveCount > 1) {
            XYJAPI_1.default.useRevive(function (suc) {
                if (suc) {
                    script.resurrect();
                }
                else {
                    this._passedTime = 3;
                }
            });
        }
        else {
            WXCore_1.default.showToast("无复活卡，赶紧去邀请好友吧~~~");
        }
    };
    /**
     * 复活
     */
    GameOverPanelMain.prototype.resurrect = function () {
        if (this._disposed)
            return;
        this.node.dispatchEvent(new cc.Event(GameCoreEvent_1.default.COMMON_CLOSE, false));
    };
    GameOverPanelMain.prototype.onDestroy = function () {
        this._disposed = true;
        this.unschedule(this.checkTime);
        // StateManage.instance.off("change", this.stateChangeHandler);
    };
    __decorate([
        property(cc.Node)
    ], GameOverPanelMain.prototype, "playVideoAdBtn", void 0);
    __decorate([
        property(cc.Node)
    ], GameOverPanelMain.prototype, "playAgainBtn", void 0);
    __decorate([
        property(cc.Node)
    ], GameOverPanelMain.prototype, "userCardBtn", void 0);
    __decorate([
        property(cc.Label)
    ], GameOverPanelMain.prototype, "scoreLabel", void 0);
    GameOverPanelMain = __decorate([
        ccclass
    ], GameOverPanelMain);
    return GameOverPanelMain;
}(cc.Component));
exports.default = GameOverPanelMain;

cc._RF.pop();