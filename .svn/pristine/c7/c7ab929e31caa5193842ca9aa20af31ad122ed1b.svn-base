{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\gamecore\\components/assets\\Script\\gamecore\\components\\Comp_SubDomainContent.ts"],"names":[],"mappings":";;;;;AACM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;;;GAGG;AAEH;IAAmD,yCAAY;IAD/D;QAAA,qEAkEC;QAhEG;;WAEG;QACK,mBAAa,GAAa,IAAI,CAAC;QAE/B,gBAAU,GAAkB,IAAI,CAAC;;IA2D7C,CAAC;IAzDG,eAAe;IAEf,qCAAK,GAAL;QACI,EAAE,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAEzC,QAAQ;QACR,IAAI,OAAO,GAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAElC,YAAY;QACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;IACzC,CAAC;IAED,sCAAM,GAAN,UAAQ,EAAE;QACN,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAClC,CAAC;IAKD;;OAEG;IACK,sDAAsB,GAA9B;QACI,IAAI,OAAO,EAAE,IAAI,WAAW;YAAE,OAAO;QAErC,IAAI,eAAe,GAAG,EAAE,CAAC,kBAAkB,EAAE,CAAC;QAC9C,IAAI,YAAY,GAAG,eAAe,CAAC,MAAM,CAAC;QAG1C,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAErE,MAAM;QACN,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC3B,IAAI,CAAC,GAAU,YAAY,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,GAAU,YAAY,CAAC,MAAM,CAAC;YAEnC,wCAAwC;YACxC,yCAAyC;YAIzC,IAAI,OAAO,GAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC/C,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YAEvC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;SACxC;IACL,CAAC;IA/DgB,qBAAqB;QADzC,OAAO;OACa,qBAAqB,CAiEzC;IAAD,4BAAC;CAjED,AAiEC,CAjEkD,EAAE,CAAC,SAAS,GAiE9D;kBAjEoB,qBAAqB","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\gamecore\\components","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * 显示子域内容组件。需要显示子域内容时，请挂载该组件到一个空节点\r\n * \r\n */\r\n@ccclass\r\nexport default class Comp_SubDomainContent extends cc.Component {\r\n    /**\r\n     * \r\n     */\r\n    private _sharedSprite:cc.Sprite = null;\r\n\r\n    private _sharedTex : cc.Texture2D = null;\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n        cc.info(\"【Comp_SubDomainContent】 start\");\r\n\r\n        //设置节点尺寸\r\n        let winSize:cc.Size = cc.director.getWinSize();\r\n        this.node.width = winSize.width;\r\n        this.node.height = winSize.height;\r\n        \r\n        //获取sprite组件\r\n        this._sharedSprite = this.node.getComponent(cc.Sprite);\r\n        if (!this._sharedSprite) {\r\n            this._sharedSprite = this.node.addComponent(cc.Sprite);\r\n        }\r\n\r\n        this._sharedTex = new cc.Texture2D();\r\n    }\r\n\r\n    update (dt) {\r\n        this.updateSubDomainContent();\r\n    }\r\n\r\n\r\n    private _contentScale:number;\r\n\r\n    /**\r\n     * 更新子域内容\r\n     */\r\n    private updateSubDomainContent () {\r\n        if (typeof wx == \"undefined\") return;\r\n\r\n        let openDataContext = wx.getOpenDataContext();\r\n        let sharedCanvas = openDataContext.canvas;\r\n\r\n        \r\n        this._sharedTex.initWithElement(sharedCanvas);\r\n        this._sharedTex.handleLoadedTexture();\r\n        this._sharedSprite.spriteFrame = new cc.SpriteFrame(this._sharedTex);\r\n\r\n        //缩放内容\r\n        if (isNaN(this._contentScale)) {\r\n            let w:number = sharedCanvas.width;\r\n            let h:number = sharedCanvas.height;\r\n\r\n            // cc.info(\"shared canvas width is\", w);\r\n            // cc.info(\"shared canvas height is\", h);\r\n           \r\n\r\n        \r\n            let winSize:cc.Size = cc.director.getWinSize();\r\n            this._contentScale = winSize.width / w;\r\n\r\n            this.node.scale = this._contentScale;\r\n        }\r\n    }\r\n\r\n}\r\n"]}