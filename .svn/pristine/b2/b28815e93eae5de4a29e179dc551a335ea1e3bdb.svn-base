{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\gameScene/assets\\Script\\gameScene\\GameSceneMain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\gameScene","sourcesContent":["\r\nimport Config from \"../StateManage/StateManage\";\r\nimport GameManager from \"../gamecore/managers/GameManager\";\r\nimport GameOverCommand from \"../commands/GameOverCommand\";\r\nimport StateManage from \"../StateManage/StateManage\";\r\nimport GameSystem from \"../GameSystem\";\r\nimport GameEventNames from \"../GameEventNames\";\r\nimport GameSceneEvents from \"./GameSceneEvents\";\r\nimport ActionMain from \"./ActionMain\";\r\nimport GameConfig from \"../GameConfig\";\r\nimport LevelInfoMain from \"./LevelInfoMain\";\r\nimport Utils from \"../gamecore/managers/Utils\";\r\nimport LevelData from \"./LevelData\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n/**\r\n * 游戏场景脚本\r\n * \r\n */\r\n@ccclass\r\nexport default class Game extends cc.Component {\r\n\r\n\r\n    @property(cc.Prefab)\r\n    actionPrefab:cc.Prefab = null;\r\n\r\n\r\n    //用户等级显示\r\n    @property(LevelInfoMain)\r\n    levelInfo:LevelInfoMain = null;\r\n\r\n    //分数显示\r\n    @property(cc.Label)\r\n    scoreLabel:cc.Label = null;\r\n\r\n    //分数显示\r\n    @property(cc.Node)\r\n    tapTipNode:cc.Node = null;\r\n\r\n    //升级特效\r\n    @property(cc.Node)\r\n    levelUpEffectNode:cc.Node = null;\r\n\r\n\r\n    //手臂结构\r\n    private _actionNode:cc.Node;\r\n\r\n    //手臂结构脚本\r\n    private _action:ActionMain;\r\n    \r\n    onLoad () {\r\n        cc.info(\"【GameSceneMain init】\");\r\n\r\n        //初始化系统\r\n        GameSystem.init();\r\n\r\n        //初始化物理系统\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        if (GameManager.isDebug) cc.director.getPhysicsManager().debugDrawFlags = 1;\r\n    }\r\n\r\n    start () {\r\n        cc.info(this.node.name)\r\n        cc.info(\"【GameSceneMain start】\");\r\n\r\n        //监听事件\r\n        this.node.on(GameSceneEvents.LEVEL_CHANGED, this.levelChangedHandler, this);\r\n\r\n        //点击等级信息，显示等级详细信息\r\n        this.levelInfo.node.on(cc.Node.EventType.TOUCH_END, this.levelInfoTapHandler, this);\r\n\r\n        this.initAction();\r\n        this.refreshLevel();\r\n    }\r\n\r\n\r\n    /**\r\n     * 初始化手臂结构\r\n     */\r\n    private initAction():void {\r\n        cc.info(\"【GameSceneMain initAction】\");\r\n\r\n        this._actionNode = cc.instantiate(this.actionPrefab);\r\n        this._action = this._actionNode.getComponent(ActionMain)\r\n        \r\n        this._actionNode.on(GameSceneEvents.GAME_START, this.actionEventsHandler, this);\r\n        this._actionNode.on(GameSceneEvents.SCORE_CHANGED, this.actionEventsHandler, this);\r\n        this._actionNode.on(GameSceneEvents.DIAMONDS_CHANGED, this.actionEventsHandler, this);\r\n        this._actionNode.on(GameSceneEvents.GAME_OVER, this.actionEventsHandler, this);\r\n        this.node.getChildByName(\"actionContainer\").addChild(this._actionNode);\r\n\r\n    }\r\n\r\n\r\n    //记录上一次宝石的数量\r\n    private _lastDiamondCount:number = 0;\r\n\r\n    //记录上一次的分数\r\n    private _lastScore:number = 0;\r\n\r\n    /**\r\n     * \r\n     * @param e \r\n     */\r\n    private actionEventsHandler(e:cc.Event):void {\r\n        let eType:string = e.type;\r\n\r\n        switch (eType) {\r\n            case GameSceneEvents.GAME_START:\r\n                //提示不可见\r\n                this.tapTipNode.active = false;\r\n                break;\r\n            case GameSceneEvents.SCORE_CHANGED:\r\n                let score:number = this._action.score;\r\n\r\n                //分数改变\r\n                StateManage.instance.setData(StateManage.KEY_SCORE, score);\r\n\r\n                //显示分数\r\n                this.scoreLabel.string = \"\" + score;\r\n\r\n                if (this._lastScore < score) {\r\n                    //增加分数，正常颜色\r\n                    this.scoreLabel.node.color = new cc.Color().fromHEX(\"#B2B2B2\");\r\n                } else {\r\n                    //减少分数，红色显示\r\n                    this.scoreLabel.node.color = new cc.Color().fromHEX(\"#ff0000\");\r\n                }\r\n                this._lastScore = score;\r\n\r\n                //改变位置\r\n                let toX:number = this.scoreLabel.node.x + this.scoreLabel.node.width / 2 + this.levelInfo.node.width / 2 + 5;\r\n                this.levelInfo.node.runAction(cc.moveTo(0.3, toX, this.levelInfo.node.y).easing(cc.easeBackOut()));\r\n                // this.levelInfo.node.x = toX;\r\n\r\n                //刷新数据\r\n                this.levelInfo.score = score;\r\n\r\n                //刷新等级\r\n                this.refreshLevel();\r\n                break;\r\n            case GameSceneEvents.DIAMONDS_CHANGED:\r\n                //宝石数量改变\r\n                let v:number = StateManage.instance.getData(StateManage.KEY_GEM);\r\n                v = Utils.toInt(v);\r\n                v = v + this._action.diamondCount - this._lastDiamondCount;\r\n                StateManage.instance.setData(StateManage.KEY_GEM, v);\r\n\r\n                this._lastDiamondCount = this._action.diamondCount;\r\n                break;\r\n            case GameSceneEvents.GAME_OVER:\r\n                //游戏结束\r\n                GameManager.eventManager.dispatchEventWith(GameEventNames.GAME_OVER);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    //当前等级信息\r\n    private _currentLevelData:LevelData = null;\r\n\r\n\r\n    /**\r\n     * 获取当前等级信息\r\n     */\r\n    public get currentLevelData():LevelData {\r\n        return this._currentLevelData;\r\n    }\r\n\r\n\r\n    /**\r\n     * 刷新等级\r\n     */\r\n    private refreshLevel():void {\r\n        let data:object;\r\n\r\n        let score:number = this._action.score;\r\n        for (let i:number = 0; i < GameConfig.LEVELS.length; i++) {\r\n            let obj:object = GameConfig.LEVELS[i];\r\n            let scoreValues:[number, number] = obj[\"score\"];\r\n            if (score >= scoreValues[0] && score <= scoreValues[1]) {\r\n                data = obj;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (data) {\r\n            if (!this._currentLevelData || (this._currentLevelData.level != data[\"level\"])) {\r\n                this._currentLevelData = new LevelData();\r\n                this._currentLevelData.fromObj(data);\r\n\r\n                //抛出事件\r\n                this.node.dispatchEvent(new cc.Event(GameSceneEvents.LEVEL_CHANGED, false));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 等级变化回调\r\n     * \r\n     * @param e \r\n     */\r\n    private levelChangedHandler(e:cc.Event):void {\r\n        cc.info(\"【levelChangedHandler】\");\r\n\r\n        //设置数据\r\n        this.levelInfo.levelData = this._currentLevelData;\r\n        this._action.levelData = this._currentLevelData;\r\n\r\n        //如果不是等级1\r\n        if (this._currentLevelData.level > 1) {\r\n            this.enterNewLevel();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 进入新的等级\r\n     */\r\n    private enterNewLevel():void {\r\n        //音效\r\n        GameManager.soundsManager.playSound(\"resources/sounds/upgrade.mp3\");\r\n\r\n        //不可操作\r\n        // this._action.enableTouch = false;\r\n\r\n        //等级提升特效\r\n        this.levelUpEffectNode.active = true;\r\n        this.levelUpEffectNode.getComponent(cc.Animation).play();\r\n        //2秒后停止\r\n        this.schedule(function():void {\r\n            // this._action.enableTouch = true;\r\n            this.levelUpEffectNode.active = false;    \r\n        }, 2, 1);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击等级信息\r\n     * \r\n     * @param e \r\n     */\r\n    private levelInfoTapHandler(e:cc.Event):void {\r\n        //播放音效\r\n        GameManager.soundsManager.playTapSound();\r\n\r\n        \r\n    }\r\n\r\n    // update (dt) {\r\n    // }\r\n\r\n\r\n    onDestroy() {\r\n\r\n    }\r\n}\r\n"]}