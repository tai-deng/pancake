{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\gameScene/assets\\Script\\gameScene\\ActionMain.ts"],"names":[],"mappings":";;;;;AAEA,qCAAgC;AAChC,qDAAgD;AAEhD,4CAAuC;AAEjC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C,SAAS;AAET;IAAwC,8BAAY;IADpD;QAAA,qEA6PC;QA3PG,eAAe;QACR,sBAAgB,GAAU,GAAG,CAAC;QAErC,OAAO;QAEP,mBAAa,GAAa,IAAI,CAAC;QAE/B,OAAO;QAEP,mBAAa,GAAa,IAAI,CAAC;QAE/B,MAAM;QAEN,sBAAgB,GAAW,IAAI,CAAC;QAGhC,OAAO;QAEP,mBAAa,GAAW,IAAI,CAAC;QAE7B,MAAM;QAEN,YAAM,GAAW,IAAI,CAAC;QAGtB,QAAQ;QACA,iBAAW,GAAW,KAAK,CAAC;QAgDpC,IAAI;QACI,eAAS,GAAkB,EAAE,CAAC;QA8FtC;;WAEG;QACK,mBAAa,GAAU,CAAC,CAAC;QAMjC;;WAEG;QACK,YAAM,GAAU,CAAC,CAAC;;IAsE9B,CAAC;IA1NG,2BAAM,GAAN;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,0BAAK,GAAL;QACI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,YAAY;QACZ,kGAAkG;QAClG,uCAAuC;QACvC,oCAAoC;QAEpC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACjF,CAAC;IAGD;;;OAGG;IACK,qCAAgB,GAAxB;QACI,IAAI,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAExD,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,gBAAgB,EAAE,CAAC;SAC3C;QAED,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElC,MAAM;QACN,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAO,CAAC,YAAY,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC7E,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAO,CAAC,eAAe,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAO,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IAKD;;OAEG;IACK,qCAAgB,GAAxB;QACI,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO;QAEtC,IAAI,IAAI,GAAW,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACvF,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACzF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1B,iBAAiB;IAErB,CAAC;IAED;;OAEG;IACK,mCAAc,GAAtB,UAAuB,IAAY;QAC/B,IAAI,KAAK,GAAU,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEhC,kBAAkB;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC/B;IACL,CAAC;IAMD,MAAM;IACE,sCAAiB,GAAzB,UAA0B,CAAU;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,yBAAe,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;SAC3E;IACL,CAAC;IAGD,OAAO;IACC,oCAAe,GAAvB,UAAwB,CAAU;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAKD,sBAAW,mCAAW;QAHtB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAO,CAAC,CAAC,OAAO,CAAC;QACvD,CAAC;;;OAAA;IAGD;;;OAGG;IACI,+BAAU,GAAjB;QACI,QAAQ;QACR,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAO,CAAC,CAAC,MAAM,EAAE,CAAC;IACjD,CAAC;IAGD,QAAQ;IACA,+BAAU,GAAlB;QACI,oEAAoE;QACpE,8BAA8B;QAC9B,oBAAoB;QACpB,qBAAqB;QACrB,iCAAiC;QACjC,wBAAwB;QACxB,QAAQ;QACR,KAAK;QACL,0BAA0B;QAE1B,qDAAqD;QACrD,0DAA0D;QAC1D,gDAAgD;QAEhD,iGAAiG;QACjG,yJAAyJ;QACzJ,+IAA+I;IAEnJ,CAAC;IAQD,sBAAW,oCAAY;aAAvB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAOD,sBAAW,6BAAK;aAAhB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAED;;;OAGG;IACK,yCAAoB,GAA5B,UAA6B,CAAU;QACnC,EAAE,CAAC,IAAI,CAAC,mCAAmC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;QAErD,IAAI,KAAK,GAAU,CAAC,CAAC,IAAI,CAAC;QAC1B,QAAQ,KAAK,EAAE;YACX,KAAK,iBAAO,CAAC,YAAY;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;YACV,KAAK,iBAAO,CAAC,eAAe;gBACxB,IAAI,KAAK,GAAU,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;oBAC5B,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;oBAEvB,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;oBAErB,MAAM;oBACN,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,yBAAe,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;iBAC9E;gBACD,MAAM;YACV,KAAK,iBAAO,CAAC,iBAAiB;gBAC1B,IAAI,UAAU,GAAW,CAAC,CAAC,MAAM,CAAY,CAAC;gBAC9C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBAEhC,IAAI,CAAC,aAAa,EAAE,CAAC;gBAErB,MAAM;gBACN,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,yBAAe,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;gBAC9E,MAAM;YACV,KAAK,iBAAO,CAAC,SAAS;gBAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;SACb;IACL,CAAC;IAED,2BAAM,GAAN,UAAQ,EAAE;QACN,OAAO;QACP,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,IAAI,GAAgB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YAC/D,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,oBAAU,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACjG,kEAAkE;YAClE,6EAA6E;SAChF;QAED,oDAAoD;QACpD,gCAAgC;QAChC,0BAA0B;QAC1B,2BAA2B;QAC3B,8EAA8E;QAE9E,0CAA0C;QAC1C,yCAAyC;QACzC,uFAAuF;QACvF,YAAY;QACZ,QAAQ;QACR,IAAI;IACR,CAAC;IAGD,8BAAS,GAAT;IACA,CAAC;IArPD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;qDACW;IAI/B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;qDACW;IAI/B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wDACc;IAKhC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACW;IAI7B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACI;IAvBL,UAAU;QAD9B,OAAO;OACa,UAAU,CA4P9B;IAAD,iBAAC;CA5PD,AA4PC,CA5PuC,EAAE,CAAC,SAAS,GA4PnD;kBA5PoB,UAAU","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\gameScene","sourcesContent":["import GameManager from \"../gamecore/managers/GameManager\";\r\nimport Json from \"../Json/Json\";\r\nimport Pancake from \"./Pancake\";\r\nimport GameSceneEvents from \"./GameSceneEvents\";\r\nimport GameEventNames from \"../GameEventNames\";\r\nimport GameConfig from \"../GameConfig\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n// 手臂类执行体\r\n@ccclass\r\nexport default class ActionMain extends cc.Component {\r\n    //煎饼初始化时，离锅底的距离\r\n    public cakeInitDistance:number = 300;\r\n\r\n    //钻石预制体\r\n    @property(cc.Prefab)\r\n    diamondPrefab:cc.Prefab = null;\r\n\r\n    //煎饼预制体\r\n    @property(cc.Prefab)\r\n    pancakePrefab:cc.Prefab = null;\r\n    \r\n    //钻石容器\r\n    @property(cc.Node)\r\n    diamondContainer:cc.Node = null;\r\n    \r\n    \r\n    //锅底碰撞体\r\n    @property(cc.Node)\r\n    panBottomNode:cc.Node = null;\r\n\r\n    //手臂一段\r\n    @property(cc.Node)\r\n    theArm:cc.Node = null;\r\n\r\n\r\n    //是否正在触摸\r\n    private _isTouching:boolean = false;\r\n\r\n\r\n    //煎饼\r\n    private _pancake:cc.Node;\r\n\r\n\r\n    onLoad(){\r\n        this.changeSkin();\r\n    }\r\n\r\n    start(){\r\n        this.createNewPancake();\r\n\r\n        //设置平板锅底相关属性\r\n        // let panCollider:cc.PhysicsBoxCollider = this.panBottomNode.getComponent(cc.PhysicsBoxCollider);\r\n        // panCollider.restitution = 0.2;//弹性系数\r\n        // panCollider.friction = 0.9;//摩擦系数\r\n\r\n        this.node.parent.on(cc.Node.EventType.TOUCH_START, this.touchStartHandler, this);\r\n        this.node.parent.on(cc.Node.EventType.TOUCH_END, this.touchEndHandler, this);\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建新的蛋糕\r\n     * \r\n     */\r\n    private createNewPancake():void {\r\n        if (this._pancake) this._pancake.removeFromParent(true);\r\n\r\n        //删除所有钻石\r\n        while (this._diamonds.length) {\r\n            this._diamonds.pop().removeFromParent();\r\n        }\r\n\r\n        this._pancake = cc.instantiate(this.pancakePrefab);\r\n        this._pancake.x = this.panBottomNode.x;\r\n        this._pancake.y = this.panBottomNode.y + this.cakeInitDistance;\r\n        this.node.addChild(this._pancake);\r\n\r\n        //监听事件\r\n        this._pancake.on(Pancake.EVENT_ON_PAN, this.pancakeEventsHandler, this);\r\n        this._pancake.on(Pancake.EVENT_GET_DIAMOND, this.pancakeEventsHandler, this);\r\n        this._pancake.on(Pancake.EVENT_GET_SCORE, this.pancakeEventsHandler, this);\r\n        this._pancake.on(Pancake.EVENT_DIE, this.pancakeEventsHandler, this);\r\n    }\r\n\r\n    //宝石\r\n    private _diamonds:Array<cc.Node> = [];\r\n\r\n    /**\r\n     * 创建一个新的钻石\r\n     */\r\n    private createNewDiamond():void {\r\n        if (this._diamonds.length > 0) return;\r\n\r\n        let diam:cc.Node = cc.instantiate(this.diamondPrefab);\r\n        diam.x = this.diamondContainer.width / 2 - Math.random() * this.diamondContainer.width;\r\n        diam.y = this.diamondContainer.height / 2 - Math.random() * this.diamondContainer.height;\r\n        this.diamondContainer.addChild(diam);\r\n\r\n        this._diamonds.push(diam);\r\n\r\n        //TODO:NEXT 新宝石特效\r\n        \r\n    }\r\n\r\n    /**\r\n     * 移除宝石\r\n     */\r\n    private removeADiamond(diam:cc.Node):void {\r\n        let index:number = this._diamonds.indexOf(diam);\r\n        if (index >= 0) {\r\n            this._diamonds.splice(index, 1);\r\n            \r\n            //TODO:NEXT 宝石移除特效\r\n            diam.removeFromParent(true);\r\n        }\r\n    }\r\n\r\n\r\n    //是否是第一次tap\r\n    private _doneFirstTap:boolean;\r\n\r\n    //开始触摸\r\n    private touchStartHandler(e:cc.Event):void {\r\n        this._isTouching = true;\r\n        this.activeCake();\r\n\r\n        if (!this._doneFirstTap) {\r\n            this._doneFirstTap = true;\r\n            this.node.dispatchEvent(new cc.Event(GameSceneEvents.GAME_START, true));\r\n        }\r\n    }\r\n\r\n\r\n    // 触摸结束\r\n    private touchEndHandler(e:cc.Event):void {\r\n        this._isTouching = false;\r\n    }\r\n\r\n    /**\r\n     * 获取饼是否已激活\r\n     */\r\n    public get cakeActived():boolean {\r\n        return this._pancake.getComponent(Pancake).actived;\r\n    }\r\n    \r\n\r\n    /**\r\n     * 激活饼\r\n     * \r\n     */\r\n    public activeCake():void {\r\n        //让煎饼落下。\r\n        this._pancake.getComponent(Pancake).active();\r\n    }\r\n\r\n    \r\n    // 改变皮肤 \r\n    private changeSkin(){\r\n        // let resName = StateManage.instance.getData(StateManage.KEY_SKIN);\r\n        // let res = new Json().skins;\r\n        // let newSkin = {};\r\n        // res.forEach(el =>{\r\n        //     if(el[\"name\"] == resName){\r\n        //         newSkin = el;\r\n        //     }\r\n        // })\r\n        // cc.log(resName,newSkin)\r\n\r\n        // let currentBigArm = cc.url.raw(newSkin[\"bigArm\"]);\r\n        // let currentLittleArm = cc.url.raw(newSkin[\"lowerArm\"]);\r\n        // let currentPot = cc.url.raw(newSkin[\"hand\"]);\r\n\r\n        // this.arm.getChildByName(\"arm1\").getComponent(cc.Sprite).spriteFrame.setTexture(currentBigArm);\r\n        // this.node.getChildByName(\"hands\").getChildByName(\"littleArm\").getChildByName(\"arm2\").getComponent(cc.Sprite).spriteFrame.setTexture(currentLittleArm);\r\n        // this.node.getChildByName(\"hands\").getChildByName(\"pot\").getChildByName(\"potImg\").getComponent(cc.Sprite).spriteFrame.setTexture(currentPot);\r\n        \r\n    }\r\n\r\n\r\n    /**\r\n     * 宝石数量\r\n     */\r\n    private _diamondCount:number = 0;\r\n\r\n    public get diamondCount():number {\r\n        return this._diamondCount;\r\n    }\r\n\r\n    /**\r\n     * 分数\r\n     */\r\n    private _score:number = 0;\r\n\r\n    public get score():number {\r\n        return this._score;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param e\r\n     */\r\n    private pancakeEventsHandler(e:cc.Event):void {\r\n        cc.info(\"【ActionMain pancakeEventsHandler】\", e.type);\r\n\r\n        let eType:string = e.type;\r\n        switch (eType) {\r\n            case Pancake.EVENT_ON_PAN:\r\n                this.createNewDiamond();\r\n                break;\r\n            case Pancake.EVENT_GET_SCORE:\r\n                let score:number = parseInt(e[\"data\"]);\r\n                if (!isNaN(score) && score > 0) {\r\n                    cc.info(\"获得分数\", score);\r\n\r\n                    this._score += score;\r\n\r\n                    //抛出事件\r\n                    this.node.dispatchEvent(new cc.Event(GameSceneEvents.SCORE_CHANGED, true));\r\n                }\r\n                break;\r\n            case Pancake.EVENT_GET_DIAMOND:\r\n                let theDiamond:cc.Node = e[\"data\"] as cc.Node;\r\n                this.removeADiamond(theDiamond);\r\n                \r\n                this._diamondCount++;\r\n\r\n                //抛出事件\r\n                this.node.dispatchEvent(new cc.Event(GameSceneEvents.DIAMONDS_CHANGED, true));\r\n                break;\r\n            case Pancake.EVENT_DIE:\r\n                this.createNewPancake();\r\n                break;\r\n        }\r\n    }\r\n\r\n    update (dt) {\r\n        //如果有触发\r\n        if (this._isTouching) {\r\n            let body:cc.RigidBody = this.theArm.getComponent(cc.RigidBody);\r\n            body.applyLinearImpulse(new cc.Vec2(GameConfig.PANCAKE_FORCE_VALUE, 0), new cc.Vec2(0, 0), true);\r\n            // body.applyForceToCenter(new cc.Vec2(this.forceValue, 0), true);\r\n            // body.applyForce(new cc.Vec2(this.forceValue, 0), new cc.Vec2(0, 0), true);\r\n        }\r\n\r\n        // let frames:number = cc.director.getTotalFrames();\r\n        // cc.info(frames, frames % 10);\r\n        // if (frames % 10 == 0) {\r\n        //     if (this._pancake) {\r\n        //         let minY:number = this.panBottomNode.y + this.panBottomNode.height;\r\n\r\n        //         cc.info(this._pancake.y, minY);\r\n        //         if (this._pancake.y <  minY) {\r\n        //             this.node.dispatchEvent(new cc.Event(GameSceneEvents.GAME_OVER, false));\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n\r\n    onDestroy() {\r\n    }\r\n}\r\n"]}