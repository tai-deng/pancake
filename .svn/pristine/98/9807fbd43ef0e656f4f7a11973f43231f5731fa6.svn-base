import ResurgenceCtrl from "./ResurgenceCtrl";

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html

const {ccclass, property} = cc._decorator;

@ccclass
export default class Resurgence extends cc.Component {

    @property(cc.RichText)
    cardNum:cc.RichText = null;
    @property(cc.Button)
    shareBtn:cc.Button = null;

    // onLoad () {}
    private _data:number;
    get data():number{
        return this._data;
    }
    set data(v:number){
        if(this._data != v){
            this._data = v;
            this.refreshUI();
        }
    }

    start () {
        if(!this._isOnLoadCalled)return;

        ResurgenceCtrl.instance.on("esurgenceCard",this.getEsurgenceCard,this);

        this.getEsurgenceCard();
    }
    private getEsurgenceCard(){
        
        this.data = ResurgenceCtrl.instance.getResurgenceCardNum();

        
    }
    private refreshUI(){
        this.cardNum.string = `<color=#f9ff60>x ${this.data}</c>`
    }
    // update (dt) {}
}
