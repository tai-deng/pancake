import GameConfig from "../GameConfig";
import LevelDetailItemMain from "./LevelDetailItemMain";

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html

const {ccclass, property} = cc._decorator;

/**
 * 等级详细信息面板
 * 
 */
@ccclass
export default class LevelDetailPanelMain extends cc.Component {

    //背景
    @property(cc.Node)
    bg:cc.Node = null;

    //当前等级详细显示节点
    @property(cc.Node)
    currentLevelNode:cc.Node;

    @property({
        type:cc.Label,
        displayName:"当前等级文本"
    })
    currentLevelLabel:cc.Label = null;

    //下一等级详细显示节点
    @property(cc.Node)
    nextLevelNode:cc.Node;

    @property({
        type:cc.Label,
        displayName:"下级等级文本"
    })
    nextLevelLabel:cc.Label = null;

    // LIFE-CYCLE CALLBACKS:

    // onLoad () {}

    //当前等级信息
    public currentLevelData:object;

    start () {

        this.refreshUI();
    }

    // update (dt) {}


    private refreshUI():void {
        this.currentLevelNode.getComponent(LevelDetailItemMain).levelData = this.currentLevelData;
        this.currentLevelLabel.string = "等级" + this.currentLevelData["level"];

        let index:number = GameConfig.LEVELS.indexOf(this.currentLevelData);
        if (index == GameConfig.LEVELS.length - 1) {
            //最后一个等级
            this.bg.height = this.node.height / 2 - (this.currentLevelNode.y - this.currentLevelNode.height - 20);
        } else {
            let nextLevelData:object = GameConfig.LEVELS[index + 1];
            this.nextLevelNode.getComponent(LevelDetailItemMain).levelData = nextLevelData;
        }
    }
}
