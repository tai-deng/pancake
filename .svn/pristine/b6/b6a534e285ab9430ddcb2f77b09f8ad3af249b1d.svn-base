{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\TopNavigationBar/assets\\Script\\TopNavigationBar\\TopNavigationBar.ts"],"names":[],"mappings":";;;;;AAAA,0DAAqD;AACrD,gEAA2D;AAErD,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAA8C,oCAAY;IAD1D;QAAA,qEAkCC;QAhCG;;WAEG;QAEH,UAAI,GAAY,IAAI,CAAC;QAErB,WAAK,GAAY,IAAI,CAAC;QAEtB,WAAK,GAAY,IAAI,CAAC;;IAwB1B,CAAC;IAtBG,mCAAQ,GAAR;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACpC,qBAAW,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;IAED,iCAAM,GAAN;QACI,qBAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAC,IAAI,CAAC,kBAAkB,EAAC,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,gCAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,qBAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvG,yBAAyB;IAC7B,CAAC;IAED,iBAAiB;IACT,6CAAkB,GAA1B,UAA2B,CAAU;QACjC,IAAI,GAAG,GAAU,qBAAW,CAAC,QAAQ,CAAC,cAAc,CAAC;QACrD,OAAO;QACP,IAAI,GAAG,IAAI,qBAAW,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,qBAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACxG;IACL,CAAC;IA3BD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACG;IAErB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACI;IAEtB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACI;IATL,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAiCpC;IAAD,uBAAC;CAjCD,AAiCC,CAjC6C,EAAE,CAAC,SAAS,GAiCzD;kBAjCoB,gBAAgB","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\TopNavigationBar","sourcesContent":["import StateManage from \"../StateManage/StateManage\";\r\nimport GameManager from \"../gamecore/managers/GameManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TopNavigationBar extends cc.Component {\r\n    /**\r\n     * 顶部导航三个元素\r\n     */\r\n    @property(cc.Node)\r\n    back: cc.Node = null;\r\n    @property(cc.Node)\r\n    grade: cc.Node = null;\r\n    @property(cc.Node)\r\n    score: cc.Node = null;\r\n\r\n    backHome(){\r\n        cc.director.loadScene(\"indexSence\");\r\n        GameManager.soundsManager.playTapSound();\r\n    }\r\n\r\n    onLoad () {\r\n        StateManage.instance.on(\"change\",this.stateChangeHandler,this);\r\n    }\r\n\r\n    start () {\r\n        this.score.getChildByName(\"Label\").getComponent(cc.Label).string = StateManage.instance.getData(\"gem\");\r\n        // cc.log(this.node.name)\r\n    }\r\n\r\n    // update (dt) {}\r\n    private stateChangeHandler(e:cc.Event):void {\r\n        let key:string = StateManage.instance.lastChangedKey;\r\n        // 监控钻石\r\n        if (key == StateManage.KEY_GEM) {\r\n            this.score.getChildByName(\"Label\").getComponent(cc.Label).string = StateManage.instance.getData(key);\r\n        }\r\n    }\r\n}\r\n"]}