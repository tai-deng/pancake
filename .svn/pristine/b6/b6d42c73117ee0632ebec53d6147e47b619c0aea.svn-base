"use strict";
cc._RF.push(module, 'f2441WgjFRCrqfwvisHCs6E', 'WXCore');
// Script/gamecore/wechat/WXCore.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
if (typeof wx != "undefined") {
    wx.onShow(function (res) {
        cc.info("----  WX Core ----");
        cc.info("-  onShow  -");
        cc.info(res);
        WXCore.query = res["query"];
    });
}
/**
 * 微信核心接口库
 */
var WXCore = /** @class */ (function () {
    function WXCore() {
    }
    WXCore_1 = WXCore;
    Object.defineProperty(WXCore, "systemInfo", {
        /**
         * 系统信息
         *
         * brand	    string	    手机品牌	1.5.0
         * model	    string	    手机型号
         * pixelRatio	number	    设备像素比
         * screenWidth	number	    屏幕宽度	1.1.0
         * screenHeight	number	    屏幕高度	1.1.0
         * windowWidth	number	    可使用窗口宽度
         * windowHeight	number	    可使用窗口高度
         * language	    string	    微信设置的语言
         * version	    string	    微信版本号
         * system	    string	    操作系统版本
         * platform	    string	    客户端平台
         * fontSizeSetting	number	用户字体大小设置。以“我-设置-通用-字体大小”中的设置为准，单位 px。	1.5.0
         * SDKVersion	    string	客户端基础库版本	1.1.0
         * benchmarkLevel	number	性能等级，-2 或 0：该设备无法运行小游戏，-1：性能未知，>=1 设备性能值，该值越高，设备性能越好(目前设备最高不到50)	1.8.0
         * battery	        number	电量，范围 1 - 100	1.9.0
         * wifiSignal	    number	wifi 信号强度，范围 0 - 4
         */
        get: function () {
            if (!WXCore_1._systemInfo) {
                WXCore_1.getSystemInfo();
            }
            return WXCore_1._systemInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXCore, "SDKVersion", {
        /**
         * 获取wx SDK版本号
         */
        get: function () {
            if (!WXCore_1._systemInfo) {
                WXCore_1.getSystemInfo();
            }
            if (WXCore_1._systemInfo) {
                return WXCore_1._systemInfo["SDKVersion"];
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXCore, "queryData", {
        /**
         * 获取请求携带参数
         */
        get: function () {
            cc.info("----  WX Core ----");
            cc.info("-  queryData  -");
            if (typeof wx == "undefined")
                return null;
            var options = wx.getLaunchOptionsSync();
            cc.info("----  小幺鸡 API ----");
            cc.info("-  wx.getLaunchOptionsSync  -");
            cc.info(options);
            if (options)
                return options["query"];
            return null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 获取系统信息
     *
     * @see https://developers.weixin.qq.com/minigame/dev/document/system/system-info/wx.getSystemInfoSync.html
     */
    WXCore.getSystemInfo = function () {
        cc.info("----  WX Core ----");
        cc.info("-  getSystemInfo  -");
        if (typeof wx == "undefined")
            return;
        WXCore_1._systemInfo = wx.getSystemInfoSync();
    };
    /**
     * 监听用户点击右上角菜单的“转发”按钮时触发的事件
     *
     * @param title             分享title
     * @param imageURL          分享的图片加载地址
     * @param queryObj          分享携带参数
     *
     * @see https://developers.weixin.qq.com/minigame/dev/document/share/wx.onShareAppMessage.html
     */
    WXCore.setOnShareAppMessage = function (title, imageURL, queryObj) {
        if (queryObj === void 0) { queryObj = null; }
        cc.info("----  WX Core ----");
        cc.info("-  setOnShareAppMessage  -");
        if (typeof wx == "undefined")
            return;
        cc.info(title, imageURL, queryObj);
        var obj = {
            title: title,
            imageUrl: imageURL
        };
        if (queryObj) {
            var queryStr = "";
            for (var key in queryObj) {
                if (queryStr != "")
                    queryStr += "&";
                queryStr += encodeURIComponent(key) + "=" + encodeURIComponent(queryObj[key]);
            }
            obj["query"] = queryStr;
        }
        wx.onShareAppMessage(function () {
            return obj;
        });
        wx.showShareMenu({
            "withShareTicket": true
        });
    };
    /**
     * 显示信息提示
     *
     * @param info 信息内容
     * @param duration 显示时间（毫秒）
     */
    WXCore.showToast = function (info, duration) {
        if (duration === void 0) { duration = 1500; }
        cc.info("----  WX Core ----");
        cc.info("-  showToast  -");
        cc.info(info);
        if (typeof wx == "undefined")
            return;
        try {
            wx.showToast({
                "title": info,
                "icon": "none",
                "duration": duration,
                "mask": false,
            });
        }
        catch (error) {
        }
    };
    //震动反馈
    WXCore.vibrateShort = function () {
        cc.info("----  WX Core ----");
        cc.info("-  vibrateShort  -");
        if (typeof wx == "undefined")
            return;
        try {
            wx.vibrateShort({});
        }
        catch (error) {
            cc.info("catch a error from wx:");
            cc.info(error);
        }
    };
    /**
     * 上报用户分数
     */
    WXCore.saveUserScore = function (score) {
        cc.info("----  WX Core ----");
        cc.info("-  saveUserScore  -");
        if (typeof wx == "undefined")
            return;
        var timestamp = (new Date()).valueOf();
        // cc.info("setUserBestScore", score, timestamp, typeof timestamp);
        try {
            wx.setUserCloudStorage({
                "KVDataList": [
                    {
                        "key": "score",
                        "value": '{"wxgame":{"score":' + score + ', "update_time":' + timestamp + '}}',
                    }
                ]
            });
        }
        catch (error) {
        }
    };
    /**
     * 获取我的数据
     *
     * @see https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getUserCloudStorage.html
     */
    WXCore.getUserScore = function (successCallback, failCallback) {
        if (failCallback === void 0) { failCallback = null; }
        cc.info("----  WX Core ----");
        cc.info("-  getUserScore  -");
        if (typeof wx == "undefined")
            return;
        try {
            wx.getUserCloudStorage({
                "keyList": ["score"],
                "success": successCallback,
                "fail": failCallback
            });
        }
        catch (error) {
            cc.info(error);
        }
    };
    /**
     * 获取我的好友数据
     */
    WXCore.getFriendData = function (successCallback, failCallback) {
        if (failCallback === void 0) { failCallback = null; }
        cc.info("----  WX Core ----");
        cc.info("-  getFriendData  -");
        if (typeof wx == "undefined")
            return;
        wx.getFriendCloudStorage({
            "keyList": ["score"],
            "success": successCallback,
            "fail": failCallback
        });
    };
    /**
     * 预览图片
     *
     * @param images 图片的url列表
     */
    WXCore.previewImage = function (images) {
        cc.info("----  WX Core ----");
        cc.info("-  vibrateShort  -");
        if (typeof wx == "undefined")
            return;
        try {
            wx.previewImage({
                "urls": images
            });
        }
        catch (error) {
        }
    };
    /**
     * 保存图片到相册
     *
     * @param imagePath
     * @param success               保存成功回调
     * @param fail                  保存失败回调
     * @param complete              完成回调
     */
    WXCore.saveImageToPhotosAlbum = function (imagePath, success, fail, complete) {
        if (success === void 0) { success = null; }
        if (fail === void 0) { fail = null; }
        if (complete === void 0) { complete = null; }
        cc.info("----  WX Core ----");
        cc.info("-  saveImageToPhotosAlbum  -");
        cc.info(imagePath);
        if (typeof wx == "undefined")
            return;
        try {
            wx.saveImageToPhotosAlbum({
                "filePath": imagePath,
                "success": success,
                "fail": fail,
                "complete": complete,
            });
        }
        catch (error) {
        }
    };
    /**
     * 分享app
     *
     * @param   title       分享的title
     * @param   imageURL    分享的图片url
     * @param   queryObj    分享携带数据
     * @param   callback    成功回调
     */
    WXCore.shareApp = function (title, imageURL, queryObj, callback) {
        if (queryObj === void 0) { queryObj = null; }
        if (callback === void 0) { callback = null; }
        cc.info("----  WX Core ----");
        cc.info("-  shareApp  -");
        if (typeof wx == "undefined")
            return;
        try {
            var obj = {
                title: title,
                imageUrl: imageURL,
                success: callback
            };
            if (queryObj) {
                var queryStr = "";
                for (var key in queryObj) {
                    if (queryStr != "")
                        queryStr += "&";
                    queryStr += encodeURIComponent(key) + "=" + encodeURIComponent(queryObj[key]);
                }
                obj["query"] = queryStr;
            }
            wx.shareAppMessage(obj);
        }
        catch (error) {
        }
    };
    /**
     * 设置关闭小游戏时，是否退出游戏
     *
     * @param v
     */
    // static setExitGameWhenHide(v:boolean):void {
    //     cc.info("----  WX Core ----");
    //     cc.info("-  setExitGameWhenHide  -");
    //     cc.info(v);
    //     if(typeof wx == "undefined") return;
    //     if (v) {
    //         wx.onHide(WXCore.hideForExitGameCallback);
    //     } else {
    //         wx.offHide(WXCore.hideForExitGameCallback);
    //     }
    // }
    // private static hideForExitGameCallback():void {
    //     wx.exitMiniProgram();//退出游戏
    // }
    /**
     * 创建图片
     *
     */
    WXCore.createImage = function (imageURL) {
        cc.info("----  WX Core ----");
        cc.info("-  createImage  -");
        cc.info(imageURL);
        if (typeof wx == "undefined")
            return null;
        var tex = new cc.Texture2D();
        var icon = wx.createImage();
        icon.src = imageURL;
        icon.onload = function () {
            tex.initWithElement(icon);
            tex.handleLoadedTexture();
        };
        return new cc.SpriteFrame(tex);
    };
    var WXCore_1;
    WXCore = WXCore_1 = __decorate([
        ccclass
    ], WXCore);
    return WXCore;
}());
exports.default = WXCore;

cc._RF.pop();