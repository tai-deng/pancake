"use strict";
cc._RF.push(module, 'a54eaeAWylK1JFbdaxHKGpm', 'Over');
// Script/commands/Over.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * 展示游戏结果
 */
var Over = /** @class */ (function () {
    function Over() {
        this.off = null;
        this.reset = null;
        this.share = null;
    }
    Over_1 = Over;
    Object.defineProperty(Over, "instance", {
        get: function () {
            if (!Over_1._instance)
                Over_1._instance = new Over_1();
            return Over_1._instance;
        },
        enumerable: true,
        configurable: true
    });
    Over.prototype.initialize = function (node) {
        this.scene = node;
        this.off = node.getChildByName("off");
        this.reset = node.getChildByName("reset");
        this.share = node.getChildByName("share");
    };
    /**
     * show
     */
    Over.prototype.show = function () {
        this.scene.active = true;
        this.scene.zIndex = 10;
    };
    Over.prototype.hidden = function () {
        this.scene.active = false;
    };
    Over._instance = null;
    __decorate([
        property(cc.Node)
    ], Over.prototype, "off", void 0);
    __decorate([
        property(cc.Node)
    ], Over.prototype, "reset", void 0);
    __decorate([
        property(cc.Node)
    ], Over.prototype, "share", void 0);
    Over = Over_1 = __decorate([
        ccclass
    ], Over);
    return Over;
    var Over_1;
}());
exports.default = Over;

cc._RF.pop();