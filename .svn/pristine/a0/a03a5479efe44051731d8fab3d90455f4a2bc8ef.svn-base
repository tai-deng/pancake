(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/Script/gamecore/wechat/WXBannerAd.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, 'c1ef1RWepZEF4nKQFISyIOt', 'WXBannerAd', __filename);
// Script/gamecore/wechat/WXBannerAd.ts

Object.defineProperty(exports, "__esModule", { value: true });
var WXEventType_1 = require("./WXEventType");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * 微信条形广告
 *
 */
var WXBannerAd = /** @class */ (function (_super) {
    __extends(WXBannerAd, _super);
    function WXBannerAd(adID, location, maxWidth) {
        if (location === void 0) { location = WXBannerAd_1.LOCATION_BOTTOM_CENTER; }
        if (maxWidth === void 0) { maxWidth = NaN; }
        var _this = _super.call(this) || this;
        //记录当前banner ad
        WXBannerAd_1._currentAd = _this;
        _this._adID = adID;
        _this._location = location;
        _this._maxWidth = maxWidth;
        _this.createAd();
        return _this;
    }
    WXBannerAd_1 = WXBannerAd;
    Object.defineProperty(WXBannerAd, "currentAd", {
        get: function () {
            return WXBannerAd_1._currentAd;
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     *
     */
    WXBannerAd.prototype.createAd = function () {
        if (typeof wx == "undefined")
            return;
        this._isNewAd = (WXBannerAd_1._theAd == null);
        if (this._isNewAd) {
            var screenSize = cc.view.getFrameSize();
            var minW = 300;
            var maxW = minW * 1.5;
            if (!isNaN(this._maxWidth) && this._maxWidth > minW) {
                maxW = this._maxWidth;
            }
            var adW = Math.max(minW, Math.min(screenSize.width, maxW));
            var adX = 0;
            var adY = 0;
            switch (this._location) {
                //TODO:NEXT 后期需补齐算法
                case WXBannerAd_1.LOCATION_BOTTOM_CENTER:
                    adX = (screenSize.width - adW) / 2;
                    adY = screenSize.height;
                    break;
                case WXBannerAd_1.LOCATION_TOP_CENTER:
                    adX = (screenSize.width - adW) / 2;
                    adY = 0;
                    break;
            }
            //计算边框
            adX += WXBannerAd_1.AD_BORDER_WEIGHT;
            adY += WXBannerAd_1.AD_BORDER_WEIGHT;
            adW -= WXBannerAd_1.AD_BORDER_WEIGHT * 2;
            cc.info("----  微信banner广告 ----");
            cc.info("-  init  -");
            cc.info(adX, adY, adW);
            cc.info("-  done  -");
            WXBannerAd_1._theAd = wx.createBannerAd({
                adUnitId: this._adID,
                style: {
                    left: adX,
                    top: adY,
                    width: adW
                }
            });
        }
        var wxBannerAd = this;
        //监听事件
        WXBannerAd_1._theAd.onLoad(function () {
            if (!wxBannerAd._disposed) {
                wxBannerAd.adLoadCallback();
            }
        });
        WXBannerAd_1._theAd.onResize(function (res) {
            if (!wxBannerAd._disposed) {
                wxBannerAd.adResizeCallback(res);
            }
        });
        WXBannerAd_1._theAd.onError(function (res) {
            if (!wxBannerAd._disposed) {
                wxBannerAd.adErrorCallback(res);
            }
        });
        this._bannerAd = WXBannerAd_1._theAd;
    };
    Object.defineProperty(WXBannerAd.prototype, "adRect", {
        /**
         * 获取广告在屏幕上的矩形区域
         */
        get: function () {
            return this._adRect;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 重新布局
     */
    WXBannerAd.prototype.relayout = function () {
        cc.info("----  微信banner广告 ----");
        cc.info("-  relayout  -");
        cc.info(this._bannerAd);
        if (!this._bannerAd)
            return;
        if (!this._bannerAd.style)
            return;
        var rw = this._bannerAd.style.realWidth;
        var rh = this._bannerAd.style.realHeight;
        var adW = this._bannerAd.style.width;
        if (isNaN(rw) || isNaN(rh))
            return;
        var screenSize = cc.view.getFrameSize();
        var adX = 0;
        var adY = 0;
        switch (this._location) {
            //TODO:NEXT 后期需补齐算法
            case WXBannerAd_1.LOCATION_BOTTOM_CENTER:
                adX = (screenSize.width - adW) / 2;
                adY = screenSize.height - rh - WXBannerAd_1.AD_BORDER_WEIGHT;
                break;
            case WXBannerAd_1.LOCATION_TOP_CENTER:
                adX = (screenSize.width - adW) / 2;
                adY = WXBannerAd_1.AD_BORDER_WEIGHT;
                break;
        }
        this._bannerAd.style.left = adX;
        this._bannerAd.style.top = adY;
        this._adRect = new cc.Rect(adX - WXBannerAd_1.AD_BORDER_WEIGHT, adY - WXBannerAd_1.AD_BORDER_WEIGHT, rw + WXBannerAd_1.AD_BORDER_WEIGHT * 2, rh + WXBannerAd_1.AD_BORDER_WEIGHT * 2);
        this.dispatchEvent(new cc.Event(WXEventType_1.default.BANNER_AD_RESIZE, false));
    };
    /**
     * 显示广告
     */
    WXBannerAd.prototype.show = function () {
        cc.info("----  微信banner广告 ----");
        cc.info("-  show  -");
        if (this._bannerAd) {
            this._bannerAd.show();
            this.dispatchEvent(new cc.Event(WXEventType_1.default.BANNER_AD_SHOW, false));
            if (!this._isNewAd) {
                this.relayout();
            }
        }
    };
    /**
     * 隐藏广告
     */
    WXBannerAd.prototype.hide = function () {
        cc.info("----  微信banner广告 ----");
        cc.info("-  hide  -");
        if (this._bannerAd) {
            this._bannerAd.hide();
            this.dispatchEvent(new cc.Event(WXEventType_1.default.BANNER_AD_HIDE, false));
        }
    };
    /**
     * 销毁广告
     *
     *
     * @param   doReal 是否真的释放。如果是，则销毁广告，否则只是隐藏。
     *
     */
    WXBannerAd.prototype.dispose = function (doReal) {
        if (doReal === void 0) { doReal = false; }
        if (this._disposed)
            return;
        this._disposed = true;
        //重置当前广告索引
        if (WXBannerAd_1._currentAd == this) {
            WXBannerAd_1._currentAd = null;
        }
        cc.info("----  微信banner广告 ----");
        cc.info("-  destroy  -");
        if (this._bannerAd) {
            if (doReal) {
                WXBannerAd_1._theAd.destroy();
            }
            else {
                this._bannerAd.hide();
            }
            this._bannerAd = null;
        }
    };
    /**
     * 广告加载完成回调
     */
    WXBannerAd.prototype.adLoadCallback = function () {
        cc.info("----  微信banner广告 ----");
        cc.info("-  adLoadCallback  -");
    };
    /**
     * 广告resize回调
     */
    WXBannerAd.prototype.adResizeCallback = function (res) {
        cc.info("----  微信banner广告 ----");
        cc.info("-  adResizeCallback  -");
        cc.info(res);
        cc.info(this, this.relayout);
        this.relayout();
    };
    /**
     * 广告错误回调
     */
    WXBannerAd.prototype.adErrorCallback = function (res) {
        cc.info("----  微信banner广告 ----");
        cc.info("-  adErrorCallback  -");
        cc.info(res);
    };
    //广告边框宽
    WXBannerAd.AD_BORDER_WEIGHT = 2;
    //底部居中
    WXBannerAd.LOCATION_BOTTOM_CENTER = "BC";
    //顶部居中
    WXBannerAd.LOCATION_TOP_CENTER = "TC";
    WXBannerAd = WXBannerAd_1 = __decorate([
        ccclass
    ], WXBannerAd);
    return WXBannerAd;
    var WXBannerAd_1;
}(cc.Node));
exports.default = WXBannerAd;

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=WXBannerAd.js.map
        