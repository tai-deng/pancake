{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Task/assets\\Script\\Task\\Task.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Task","sourcesContent":["import Json from \"../Json/Json\";\r\nimport StateManage from \"../StateManage/StateManage\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Task extends cc.Component {\r\n    private sec:number = 0;\r\n    \r\n    // 任务节点\r\n    @property([cc.Node])\r\n    items:Array<cc.Node> = [];\r\n    // 所有任务\r\n    private tasks:Array<object> = [];\r\n    // 当前任务\r\n    private currentTask:Array<object> = [];\r\n    private date:Date = new Date();\r\n\r\n    onLoad () {\r\n        this.tasks = new Json().tasks;\r\n    }\r\n\r\n    start () {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化任务   \r\n     * 1.如果当前时间过了 0 点增加任务次数 1;\r\n     */\r\n    public init(){\r\n        // 判断时间更新任务\r\n        let tasknuma = StateManage.instance.getData(StateManage.KEY_TASKA);\r\n        let tasknumb = StateManage.instance.getData(StateManage.KEY_TASKB);\r\n        let tasknumc = StateManage.instance.getData(StateManage.KEY_TASKC);\r\n        this.items.forEach(el =>{\r\n            let  item:cc.Node = el as cc.Node;\r\n            item.on(\"getData\", this.itemGetData, this);\r\n            if(el.name == \"taskItem1\"){\r\n                if(JSON.stringify(tasknuma) == \"{}\"){\r\n                    let temp = this.randomTask(this.currentTask);\r\n                    StateManage.instance.setData(StateManage.KEY_TASKA,temp);\r\n                    el.getComponent(TaskItem).itemData = temp;\r\n                    StateManage.instance.setData(StateManage.KEY_TASKNUMA,StateManage.instance.getData(StateManage.KEY_TASKNUMA)+1);\r\n                    this.rezreo(temp[\"value\"]);\r\n                }else{\r\n                    el.getComponent(TaskItem).itemData = tasknuma;\r\n                }\r\n            }\r\n            if(el.name == \"taskItem2\"){\r\n                if(JSON.stringify(tasknumb) == \"{}\"){\r\n                    let temp = this.randomTask(this.currentTask);\r\n                    StateManage.instance.setData(StateManage.KEY_TASKB,temp);\r\n                    el.getComponent(TaskItem).itemData = temp;\r\n                    StateManage.instance.setData(StateManage.KEY_TASKNUMB,StateManage.instance.getData(StateManage.KEY_TASKNUMB)+1);\r\n                    this.rezreo(temp[\"value\"]);\r\n                }else{\r\n                    el.getComponent(TaskItem).itemData = tasknumb;\r\n                }\r\n            }\r\n            if(el.name == \"taskItem3\"){\r\n                if(JSON.stringify(tasknumc) == \"{}\"){\r\n                    let temp = this.randomTask(this.currentTask);\r\n                    StateManage.instance.setData(StateManage.KEY_TASKC,temp);\r\n                    el.getComponent(TaskItem).itemData = temp;\r\n                    StateManage.instance.setData(StateManage.KEY_TASKNUMC,StateManage.instance.getData(StateManage.KEY_TASKNUMC)+1);\r\n                    this.rezreo(temp[\"value\"]);\r\n                }else{\r\n                    el.getComponent(TaskItem).itemData = tasknumc;\r\n                }\r\n            }\r\n        })\r\n    }\r\n    // 获取任务\r\n    private itemGetData(e:cc.Event):void {\r\n        let item:cc.Node = e.currentTarget as cc.Node;\r\n        let taskItem:TaskItem = item.getComponent(TaskItem);\r\n        let oldId =  item.getComponent(TaskItem).itemData[\"id\"];\r\n        let arr = [];\r\n        this.currentTask.forEach(el => {\r\n            if(el[\"id\"] != oldId){\r\n                arr.push(el);\r\n            }\r\n        });\r\n        this.currentTask = arr;\r\n        taskItem.itemData = this.randomTask(this.currentTask);\r\n        \r\n        this.rezreo(taskItem[\"value\"]);\r\n    }\r\n\r\n    public rezreo (el:string){\r\n        switch(el){\r\n            case \"overturn\":\r\n            StateManage.instance.setData(\"overturn\",0);\r\n            break;\r\n            case \"tagem\":\r\n            StateManage.instance.setData(\"tagem\",0);\r\n            break;\r\n            case \"turn\":\r\n            StateManage.instance.setData(\"turn\",0);\r\n            break;\r\n            case \"tmturn\":\r\n            StateManage.instance.setData(\"tmturn\",0);\r\n            break;\r\n            case \"tagrade\":\r\n            StateManage.instance.setData(\"tagrade\",0);\r\n            break;\r\n            case \"resurgenceCar\":\r\n            StateManage.instance.setData(\"resurgenceCar\",0);\r\n            break;\r\n            case \"fdrelay\":\r\n            StateManage.instance.setData(\"fdrelay\",0);\r\n            break;\r\n            case \"crazyTap\":\r\n            StateManage.instance.setData(\"crazyTap\",0);\r\n            break;\r\n            case \"anyShare\":\r\n            StateManage.instance.setData(\"anyShare\",0);\r\n            break;\r\n            case \"ripeShare\":\r\n            StateManage.instance.setData(\"ripeShare\",0);\r\n            break;\r\n        }\r\n    }\r\n    // 随机任务\r\n    public randomTask(arr:Array<object>){\r\n        while (true){\r\n            let length = this.tasks.length;\r\n            let ind = Math.floor(Math.random() * length);\r\n            ind = ind == length ? length - 1 : ind;\r\n            let taskI = this.tasks[ind];\r\n            let hasSame:boolean = false;\r\n            \r\n            for(let i = 0;i < arr.length;++i){\r\n                if(arr[i]['id'] == taskI['id']) {\r\n                    hasSame = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!hasSame) {\r\n                this.currentTask.push(taskI);\r\n                return taskI;\r\n            }\r\n        }\r\n    }\r\n    public setTimeDay(){\r\n        let isTime = StateManage.instance.getData(StateManage.KEY_NEXTDAY);\r\n        if(isTime == null){\r\n            this.renewal();\r\n            cc.log(\"^^^^^^^^^^^^^^^^^^^^^^^^\")\r\n        }else if(this.date.getTime() > StateManage.instance.getData(StateManage.KEY_NEXTDAY)){\r\n            this.newNextDay()\r\n        }\r\n    }\r\n    /**\r\n     * 定时更新任务\r\n     * 1.获取当前的日期 年月日\r\n     * 2.获取下一天0点的时间戳\r\n     * 3.当前的时间大于这个时间就给一个刷新机会\r\n     * 4.给过机会之后重新获取当前的日期 年月日\r\n     */\r\n    public renewal(){\r\n        let time = this.date.getTime();\r\n        let newDate = new Date(time+86400000);\r\n        newDate.setHours(0,0,0);\r\n        let nextDay = newDate.getTime();\r\n        StateManage.instance.setData(StateManage.KEY_NEXTDAY,nextDay);\r\n        StateManage.instance.setData(StateManage.KEY_TASKNUMA,1);\r\n        StateManage.instance.setData(StateManage.KEY_TASKNUMB,1);\r\n        StateManage.instance.setData(StateManage.KEY_TASKNUMC,1);\r\n    }\r\n    /**\r\n     * 更新目标时间\r\n     */\r\n    public newNextDay(){\r\n        let time = this.date.getTime();\r\n        let newDate = new Date(time+86400000);\r\n        newDate.setHours(0,0,0);\r\n        let nextDay = newDate.getTime();\r\n        StateManage.instance.setData(StateManage.KEY_NEXTDAY,nextDay);\r\n    }\r\n    update (dt) {\r\n        this.sec += dt;\r\n        if(Math.floor(this.sec) == 1){\r\n            this.setTimeDay();\r\n            this.sec = 0;\r\n        }\r\n    }\r\n}\r\n"]}