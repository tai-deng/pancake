"use strict";
cc._RF.push(module, 'f69472ZTqZENKhPjCGCG4xt', 'LevelDetailItemMain');
// Script/gameScene/LevelDetailItemMain.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../GameConfig");
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**
 * 等级详细信息面本item
 *
 */
var LevelDetailItemMain = /** @class */ (function (_super) {
    __extends(LevelDetailItemMain, _super);
    function LevelDetailItemMain() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //锅
        _this.panSprite = null;
        //中锅底
        _this.panSF_m = null;
        //小锅底
        _this.panSF_s = null;
        //油
        _this.oilSprite = null;
        //中油
        _this.oilSF_m = null;
        //小油
        _this.oilSF_s = null;
        //火
        _this.fireNode = null;
        //锅大小信息
        _this.panInfoLabel = null;
        //油信息
        _this.oilInfoLabel = null;
        //火信息
        _this.fireInfoLabel = null;
        return _this;
    }
    // onLoad () {}
    LevelDetailItemMain.prototype.start = function () {
        this.refreshUI();
    };
    Object.defineProperty(LevelDetailItemMain.prototype, "levelData", {
        // update (dt) {}
        set: function (v) {
            if (!v)
                return;
            this._levelData = v;
            this.refreshUI();
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     */
    LevelDetailItemMain.prototype.refreshUI = function () {
        if (!this._isOnLoadCalled)
            return;
        if (!this._levelData)
            return;
        var panSize = this._levelData.panSize;
        if (isNaN(panSize) || panSize == 0) {
            this.panInfoLabel.string = "大";
        }
        else if (panSize == 1) {
            this.panInfoLabel.string = "中";
            this.panSprite.spriteFrame = this.panSF_m;
            this.oilSprite.spriteFrame = this.oilSF_m;
        }
        else if (panSize == 2) {
            this.panInfoLabel.string = "小";
            this.panSprite.spriteFrame = this.panSF_s;
            this.oilSprite.spriteFrame = this.oilSF_s;
        }
        //摩擦系数
        var frictionV = this._levelData.friction;
        if (isNaN(frictionV))
            frictionV = GameConfig_1.default.PANCAKE_FRICTION;
        if (frictionV > GameConfig_1.default.PANCAKE_ANGULAR_DAMPING) {
            this.oilInfoLabel.string = "大";
            this.oilSprite.node.active = false;
        }
        else if (frictionV == GameConfig_1.default.PANCAKE_ANGULAR_DAMPING) {
            this.oilInfoLabel.string = "中";
            this.oilSprite.node.active = true;
        }
        else if (frictionV < GameConfig_1.default.PANCAKE_ANGULAR_DAMPING) {
            this.oilInfoLabel.string = "小";
            this.oilSprite.node.active = true;
        }
        //是否有限时
        var tl = this._levelData.timeLimitedValue;
        if (tl && tl.length > 0) {
            this.fireInfoLabel.string = "有";
            this.fireNode.active = true;
        }
        else {
            this.fireInfoLabel.string = "无";
            this.fireNode.active = false;
        }
    };
    __decorate([
        property(cc.Sprite)
    ], LevelDetailItemMain.prototype, "panSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], LevelDetailItemMain.prototype, "panSF_m", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], LevelDetailItemMain.prototype, "panSF_s", void 0);
    __decorate([
        property(cc.Sprite)
    ], LevelDetailItemMain.prototype, "oilSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], LevelDetailItemMain.prototype, "oilSF_m", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], LevelDetailItemMain.prototype, "oilSF_s", void 0);
    __decorate([
        property(cc.Node)
    ], LevelDetailItemMain.prototype, "fireNode", void 0);
    __decorate([
        property(cc.Label)
    ], LevelDetailItemMain.prototype, "panInfoLabel", void 0);
    __decorate([
        property(cc.Label)
    ], LevelDetailItemMain.prototype, "oilInfoLabel", void 0);
    __decorate([
        property(cc.Label)
    ], LevelDetailItemMain.prototype, "fireInfoLabel", void 0);
    LevelDetailItemMain = __decorate([
        ccclass
    ], LevelDetailItemMain);
    return LevelDetailItemMain;
}(cc.Component));
exports.default = LevelDetailItemMain;

cc._RF.pop();